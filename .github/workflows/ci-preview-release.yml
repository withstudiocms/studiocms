name: CI - Snapshot Release on PRs and Main

on: 
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event.number || github.sha }}
  cancel-in-progress: true

permissions:
  contents: read
  actions: write

env:
  FORCE_COLOR: true
  # 7 GiB by default on GitHub, setting to 6 GiB
  # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resources
  NODE_OPTIONS: --max-old-space-size=6144

jobs:
  preview-main:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      issues: write
      pull-requests: write
    name: Pkg-main-new Snapshot Preview
    timeout-minutes: 5
    steps:
      - name: Disable git crlf
        run: git config --global core.autocrlf false

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          # Changeset needs access to the main branch to find pending changesets
          fetch-depth: 0

      - name: Setup PNPM
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0

      - name: Setup Node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version-file: '.node-version'
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Run Prepublish
        run: pnpm ci:prepublish

      - name: Get pnpm packages
        id: pnpm-packages
        run: |
          pnpm list --recursive --depth -1 --json > pnpm.json
          echo "packages-output=$(cat pnpm.json | jq -c 'map(select(.private == false))')" >> $GITHUB_OUTPUT

      - name: Compute packages paths
        id: compute-packages-paths
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          PACKAGES: ${{ steps.pnpm-packages.outputs.packages-output }}
        with:
          script: |
              const { relative } = require('node:path');
              const packages = JSON.parse(process.env.PACKAGES);
              const packagesMap = Object.fromEntries(packages.map(p => [p.name, relative(process.cwd(), p.path)]));
              core.setOutput('packages-paths', JSON.stringify(packagesMap));

      - name: Publish packages
        env:
          PACKAGES_PATHS: ${{ steps.compute-packages-paths.outputs.packages-paths }}
        run: pnpm dlx pkg-pr-new publish --pnpm --no-template $PACKAGES_PATHS

  preview-pr:
    if: github.event_name == 'pull_request' 
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      issues: write
      pull-requests: write
    name: Pkg-pr-new Snapshot Preview
    timeout-minutes: 5
    steps:
      - name: Disable git crlf
        run: git config --global core.autocrlf false

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          # Changeset needs access to the main branch to find pending changesets
          fetch-depth: 0

      - name: Setup PNPM
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0

      - name: Setup Node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version-file: '.node-version'
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Run Prepublish
        run: pnpm ci:prepublish

      - name: Get changeset status
        id: changeset-status
        run: |
          pnpm changeset status --output changes.json
          echo "changes-output=$(cat changes.json | jq -c .)" >> $GITHUB_OUTPUT

      - name: Get pnpm packages
        id: pnpm-packages
        run: |
          pnpm list --recursive --depth -1 --json > pnpm.json
          echo "packages-output=$(cat pnpm.json | jq -c 'map(select(.private == false))')" >> $GITHUB_OUTPUT

      - name: Compute affected packages
        id: compute-affected-packages
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          CHANGES: ${{ steps.changeset-status.outputs.changes-output }}
          PACKAGES: ${{ steps.pnpm-packages.outputs.packages-output }}
        with:
          script: |
              const { relative } = require('node:path');
              const changes = JSON.parse(process.env.CHANGES);
              const packages = JSON.parse(process.env.PACKAGES);
              const packagesMap = Object.fromEntries(packages.map(p => [p.name, relative(process.cwd(), p.path)]));
              const affectedPackages = [...new Set(changes.changesets.map(c => c.releases.map(r=> packagesMap[r.name])).flat())]
              core.setOutput('affected-packages', JSON.stringify(affectedPackages));

      - name: Publish packages
        env:
          AFFECTED_PACKAGES: ${{ steps.compute-affected-packages.outputs.affected-packages }}
        run: |
          packages=$(echo "$AFFECTED_PACKAGES" | jq -r '.[]' 2>/dev/null | tr '\n' ' ' || echo "")
          if [ -n "$packages" ]; then
            pnpm dlx pkg-pr-new publish --pnpm --no-template $packages
          else
            echo "No affected packages to publish"
          fi
        
