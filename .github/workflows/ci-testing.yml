name: CI - Testing

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

concurrency:
  group: ${{ github.workflow }}-testing-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  typecheck:
    name: Type Checks
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cmd: ["withstudiocms", "studiocms", "studiocms-packages"]
    steps:
      - name: Check out code using Git
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Install Tools & Dependencies
        uses: withstudiocms/automations/.github/actions/install@729a20ff5e68dd95330fb1914b801960ad4b5e7b # main

      - name: Run Build for TypeChecks
        run: pnpm ci:build

      - name: Run @${{ matrix.cmd }} TypeCheck
        run: pnpm ci:typecheck:${{ matrix.cmd }}

  vitest-tests:
    name: Run Tests, Code Coverage & Allure Report
    runs-on: ubuntu-latest
    permissions:
      contents: write # For Allure GitHub Pages deployment
      pull-requests: write # For Allure PR comments
    env:
      NODE_OPTIONS: "--max_old_space_size=4096"
    steps:
      - name: Check out code using Git
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: true

      - name: Install Tools & Dependencies
        uses: withstudiocms/automations/.github/actions/install@729a20ff5e68dd95330fb1914b801960ad4b5e7b # main

      - name: Build packages
        run: pnpm ci:build

      - name: Run Tests & Code Coverage
        run: pnpm ci:test

      - name: Generate Allure Report and Deploy
        if: always()
        uses: ./.github/actions/allure-report
        with:
          gh_pages_branch: testing/allure
          gh_page_history: testing/allure
          allure_report_id: studiocms-tests
          allure_report_dir: allure-results
          cname: tests.studiocms.dev

      - name: Generate Code Coverage Report and Upload
        if: always() && (github.event.pull_request.head.repo.full_name == github.repository || github.ref == 'refs/heads/main')
        uses: ./.github/actions/coverage-report
        with:
          slug: withstudiocms/studiocms
          coverage_flags: integrations,plugins,tools-utils
          codecov_token: ${{ secrets.CODECOV_TOKEN }}

  # Bundle Analysis can only run on PRs from the same repository or on main branch pushes
  # This is because it needs to be able to access secret values for environment variables
  # to build the test projects
  bundle-analysis:
    name: Bundle Analysis
    runs-on: ubuntu-latest
    if: (github.event.pull_request.head.repo.full_name == github.repository) || (github.ref == 'refs/heads/main' && github.repository == 'withstudiocms/studiocms')
    strategy:
      matrix:
        cmd: ["blog", "headless"]
    env:
      NODE_OPTIONS: "--max_old_space_size=4096"
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      ASTRO_DB_REMOTE_URL: ${{ secrets.ASTRO_DB_REMOTE_URL }}
      ASTRO_DB_APP_TOKEN: ${{ secrets.ASTRO_DB_APP_TOKEN }}
      CMS_ENCRYPTION_KEY: ${{ secrets.CMS_ENCRYPTION_KEY }}
    steps:
      - name: Check out code using Git
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 2
          persist-credentials: false

      - name: Install Tools & Dependencies
        uses: withstudiocms/automations/.github/actions/install@729a20ff5e68dd95330fb1914b801960ad4b5e7b # main

      - name: Build packages
        run: pnpm ci:build

      - name: Build Astro Bundle Test for @${{ matrix.cmd }}
        run: pnpm bundle-test:${{ matrix.cmd }}
