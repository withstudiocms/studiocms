---
import { logger } from '@it-astro:logger:studiocms-renderer';
import rendererConfig from 'studiocms:renderer/config';
import type { StudioCMSRendererConfig } from '@studiocms/core/schemas/renderer';
import renderAstroMD from '../lib/astro-remark';
import builtInContentRenderer from '../lib/contentRenderer';
import renderMarkDoc from '../lib/markdoc';
import renderAstroMDX from '../lib/mdx';

type Props = {
	content: string;
	renderer?: StudioCMSRendererConfig['renderer'];
};

const { content, renderer = rendererConfig.renderer } = Astro.props;

function rendererSelect(renderer: StudioCMSRendererConfig['renderer']) {
	if (renderer === 'astro') {
		logger.debug('Using built-in renderer: astro remark');
		return renderAstroMD;
	}
	if (renderer === 'markdoc') {
		logger.debug('Using built-in renderer: markdoc');
		return renderMarkDoc;
	}
	if (renderer === 'mdx') {
		logger.debug('Using built-in renderer: mdx');
		return renderAstroMDX;
	}
	if (renderer.renderer) {
		logger.debug(`Using custom renderer: ${renderer.name}`);
		return renderer.renderer;
	}
	return renderAstroMD;
}

const renderedContent = await builtInContentRenderer({
	content,
	renderer: rendererSelect(renderer),
});
---

<Fragment set:html={renderedContent} />