---
import { dashboardConfig } from 'studiocms:config';
import { useTranslations } from 'studiocms:i18n';
import { StudioCMSRoutes } from 'studiocms:lib';
import {
	Divider,
	Dropdown,
	DoubleSidebar as SuiDoubleSidebar,
	User,
} from '@studiocms/ui/components';
import StudioCMSLogo from '../components/StudioCMSLogo.astro';
import SidebarLink from './SidebarLink.astro';
import Admin from './islands/sidebar/Admin.astro';
import UserAccount from './islands/sidebar/UserAccount.astro';
import VersionCheck from './islands/sidebar/VersionCheck.astro';
import VersionCheckPart from './shared-parts/VersionCheck.astro';

const { versionCheck } = dashboardConfig;

interface Props {
	pagePreRendered: boolean;
}

const { pagePreRendered } = Astro.props;

const lang = 'en-us';
const t = useTranslations(lang, '@studiocms/dashboard:sidebar');
---

<SuiDoubleSidebar class='sidebar' transition:persist transition:persist-props>
  <div slot="outer" class="outer-sidebar-container">
    <div class="sidebar-links-container">
      <div class="sidebar-header">
        <StudioCMSLogo class={'sidebar-logo'} />
        <div class="sidebar-header-text">
          <span class="sidebar-title">StudioCMS</span>
          { versionCheck && 
            (
              <>
              { pagePreRendered
                ? (
                  <VersionCheck server:defer transition:persist transition:persist-props>
                    <VersionCheckPart slot="fallback" />
                  </VersionCheck>
                ) : (
                  <VersionCheck transition:persist transition:persist-props />
              )} 
              </>
            )
          }
        </div>
      </div>
      <Divider background='background-step-1'>{t("category-1-header")}</Divider>
      <div class="sidebar-link-group">
        <SidebarLink icon='home' href={'/dashboard/'}>
          {t("dashboard-link-label")}
        </SidebarLink>
        <SidebarLink icon='pencil-square' href={'/dashboard/content-management/'}>
          {t("content-management-label")}
        </SidebarLink>
      </div>
      {
        pagePreRendered 
        ? <Admin server:defer transition:persist transition:persist-props /> 
        : <Admin transition:persist transition:persist-props />
      }
      { /* 
        Fallback slot removed from <Admin /> component to prevent the sidebar
        from displaying the fallback content when the user is not an admin.
      */}
    </div>  
    <div>
      <Dropdown 
        id='sidebar-user-dropdown'
        options={[
          { label: t("user-dropdown:settings"), value: 'user-settings', icon: "user", href: StudioCMSRoutes.mainLinks.userProfile },
          { label: t("user-dropdown:view-site"), value: 'view-site', icon: "globe-alt", href: StudioCMSRoutes.mainLinks.baseSiteURL },
          { label: t("user-dropdown:logout"), value: 'log-out', icon: "arrow-left-start-on-rectangle", href: StudioCMSRoutes.authLinks.logoutURL, color: 'danger' },
        ]}
        offset={8}
        transition:persist transition:persist-props
      >
        <div class="user-dropdown-trigger-container">
          {
            pagePreRendered
            ? (
              <UserAccount server:defer transition:persist transition:persist-props>
                <User slot="fallback" name={"Visitor"} description={'Unknown'} />
              </UserAccount>
            ) 
            : <UserAccount transition:persist transition:persist-props />
          }
        </div>
      </Dropdown>
    </div>
  </div>
  <div slot="inner">
    Content yepyep
  </div>
</SuiDoubleSidebar>

<script>
  import { DoubleSidebarHelper } from "@studiocms/ui/components";
  import { DropdownHelper } from "@studiocms/ui/components";
  import { sidebarLinks } from "./component-scripts/sidebarLinks";

  document.addEventListener('astro:page-load', () => {
    if (document.getElementById('sui-sidebars')) {
      new DoubleSidebarHelper();
    }
    new DropdownHelper('sidebar-user-dropdown', true);
    sidebarLinks();
  });
</script>
