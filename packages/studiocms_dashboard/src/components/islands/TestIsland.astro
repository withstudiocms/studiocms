---
import studioCMS_SDK from 'studiocms:sdk';
const pageList = await studioCMS_SDK.GET.database.pages();
---
<div>
  <h2>Test Island</h2>

  <p>
    This is a test island, to demonstrate how we can create a server island that can read and use query parameters.
    <br />
    The idea is to generate a list of pages using the SDK on the inner sidebar, and then use the query parameter to select 
    which page to display as two separate islands.
  </p>

  <p>Current Selected: <span id="current-display-id">N/A</span></p>

  <div id="current-display-data"></div>

  <div>
    <h3>Page List</h3>
  </div>
  <ul>
    {pageList.map(({ id, title }) => <li><a href={`?id=${id}`}>{title}</a></li>)}
  </ul>
</div>

<script is:inline>
  async function listener() {
    // listen for query parameter changes
    const urlParams = new URLSearchParams(window.location.search);

    const id = urlParams.get('id');

    const currentDisplay = document.getElementById('current-display-id');
    const currentDisplayData = document.getElementById('current-display-data');

    currentDisplay.innerText = id || 'N/A';

    const pageDataResponse = await (await fetch(`/studiocms_api/dashboard/list-pages`)).json();

    if (id) {
      const pageData = pageDataResponse.find((page) => page.id === id);

      if (pageData) {
        currentDisplayData.innerHTML = `
          <h1>${pageData.title}</h1>
          <p>${JSON.stringify(pageData, null, 2)}</p>  
        `;
      } else {
        currentDisplayData.innerHTML = `
          <p>Page not found</p>
        `;
      }
    } else {
      currentDisplayData.innerHTML = `
        <p>Select a page from the list to display</p>
      `;
    }

  }

  listener();
</script>

