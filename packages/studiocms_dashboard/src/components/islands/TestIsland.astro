---
import { StudioCMSRoutes } from 'studiocms:lib';
import studioCMS_SDK from 'studiocms:sdk/cache';
const pageList = await studioCMS_SDK.GET.pages();
---
<div>
  <h2>Test Island</h2>

  <p>
    This is a test island, to demonstrate how we can create a server island that can read and use query parameters.
    <br />
    The idea is to generate a list of pages using the SDK on the inner sidebar, and then use the query parameter to select 
    which page to display as two separate islands.
  </p>

  <div>
    <h3>Page List</h3>
  </div>
  <ul>
    {pageList.map(({ id, data: { title } }) => <li><a href={`?id=${id}`}>{title}</a></li>)}
  </ul>

  <p>Last Database Update: <span id="current-display-last-update">N/A</span></p>

  <div id="current-display-data"></div>
</div>

<div style="display: none;" id="sdk-api-pages" data-link={StudioCMSRoutes.sdk.pages}/>

<script is:inline>
  async function listener() {
    // get the query parameters
    const urlParams = new URLSearchParams(window.location.search);

    // get the id parameter
    const id = urlParams.get('id');

    // get the elements
    const currentDisplay = document.getElementById('current-display-id');
    const currentDisplayData = document.getElementById('current-display-data');
    const currentDisplayLastUpdate = document.getElementById('current-display-last-update');
    const sdkApiPagesLink = document.getElementById('sdk-api-pages');

    // get the page data
    const pageDataResponse = await (await fetch(sdkApiPagesLink.dataset.link)).json();

    // set the last updated date
    currentDisplayLastUpdate.innerText = new Date(pageDataResponse.lastUpdated).toLocaleString();

    if (id) {
      // find the page data from the list
      const pageData = pageDataResponse.pages.find((page) => page.id === id);

      if (pageData) {
        currentDisplayData.innerHTML = `
          <h1>${pageData.data.title}</h1>
          <p>${JSON.stringify(pageData, null, 2)}</p>  
        `;
      } else {
        currentDisplayData.innerHTML = `
          <p>Page not found</p>
        `;
      }
    } else {
      currentDisplayData.innerHTML = `
        <p>Select a page from the list to display</p>
      `;
    }
  }

  listener();
</script>

