---
import { getUserData, verifyUserPermissionLevel } from 'studiocms:auth/lib/user';
import { StudioCMSRoutes } from 'studiocms:lib';
import studioCMS_SDK_Cache from 'studiocms:sdk/cache';
import currentVersion from 'studiocms:version';
import { Modal } from '@studiocms/ui/components';
import { compare } from 'semver';

const data = await getUserData(Astro);

const isAdmin = await verifyUserPermissionLevel(data, 'admin');

const latestVersion = await studioCMS_SDK_Cache.GET.latestVersion();

const lastChecked = latestVersion.lastCacheUpdate;

const comparison = compare(currentVersion, latestVersion.version);

const classList = comparison === -1 ? 'outdated' : comparison === 0 ? 'latest' : 'future';

function timeAgo(date: Date) {
	const now = new Date();
	const past = new Date(date);
	const diffInMs = now.getTime() - past.getTime();

	if (Number.isNaN(diffInMs)) {
		return 'Invalid date';
	}

	const minutes = Math.floor(diffInMs / (1000 * 60)) % 60;
	const hours = Math.floor(diffInMs / (1000 * 60 * 60)) % 24;
	const days = Math.floor(diffInMs / (1000 * 60 * 60 * 24));

	const parts = [];

	// If days is greater than 0, add days to parts array
	if (days > 0) parts.push(`${days} day${days > 1 ? 's' : ''}`);

	// If days is 0, add hours and minutes to parts array
	if (days === 0) {
		if (hours > 0) parts.push(`${hours} hour${hours > 1 ? 's' : ''}`);
		if (minutes > 0 || parts.length === 0) parts.push(`${minutes} min${minutes > 1 ? 's' : ''}`);
	}

	return `${parts.join(', ')} ago`;
}

function dateWithTimeAndZone(date: Date) {
	return date.toLocaleString(undefined, {
		month: 'short',
		day: 'numeric',
		year: 'numeric',
		hour: 'numeric',
		minute: 'numeric',
		timeZoneName: 'short',
	});
}
---
  
{ isAdmin && ( 
    <div class="version-container" id="version-modal-trigger" title="Click for more information" aria-label="Click for more information">
        <code class="version-check">
            <span class="version-line">Version {currentVersion}</span>
            <span class="status" class:list={[classList]} />
        </code>

        { comparison === -1 
            ? <span class="pre-release-message">Outdated</span> 
            : comparison === 0 
                ? undefined 
                : <span class="pre-release-message">Prerelease</span>
        }
    </div>

    <Modal id="version-modal" size="sm">
        <h2 slot="header">
            Version Information
        </h2>
        <div>
            <h3>Currently Installed Version</h3>
            <p>
                <code>StudioCMS v{currentVersion}</code>
            </p>

            <h3>Latest Published Version</h3>
            <p>
                <code>StudioCMS v{latestVersion.version}</code>
            </p>

            <h3>Last Update Check    
                <a href={StudioCMSRoutes.sdk.updateLatestVersionCache} 
                    data-astro-prefetch="tap" 
                    data-astro-reload class="reload-button" 
                    title="Check for updates" 
                    aria-label="Check for updates"
                    ><span class="reload"></span>
                </a>
            </h3>
            <div class="last-update-container">
                <p>
                    <time id="version-modal-last-checked-date" datetime={lastChecked.toISOString()}>{dateWithTimeAndZone(lastChecked)}</time>
                    <span class="latest-update-check">({timeAgo(lastChecked)})</span>
                </p>

                
            </div>

            <h3>Links</h3>
            <div class="version-modal-links">
                <a href="https://github.com/withstudiocms/studiocms/releases" target="_blank" class="version-link"><span class="brand--github"></span></a>
                <a href="https://npm.im/studiocms" target="_blank" class="version-link"><span class="brand--npm"></span></a>
            </div>
        </div>
    </Modal>
)}

<script>
    import { ModalHelper } from '@studiocms/ui/components';
    import { makeClientRoutable } from '../../component-scripts/makeClientRoutable';
    import { dateTimeListener } from '../../component-scripts/dateTimeListener';

    new ModalHelper('version-modal', 'version-modal-trigger');
    makeClientRoutable(dateTimeListener('version-modal-last-checked-date'));
</script>

<style>
    .version-container {
        display: flex;
        flex-direction: column;
        gap: .05rem;
        width: 100%;
        color: hsl(var(--text-muted));
        cursor: default;
    }

    .version-check {
        display: flex;
        flex-direction: row;
        gap: .375rem;
        width: 100%;
        justify-content: center;
        text-align: center;
        align-items: center;
        align-content: center;
        vertical-align: middle;
        color: hsl(var(--text-muted));
        font-size: .875em;
    }

    .version-link {
        text-decoration: none !important;
    }

    a:-webkit-any-link:hover {
        text-decoration: underline;
        color: hsl(var(--primary-base));
    }

    a:-webkit-any-link {
        color: hsl(var(--text-muted));
        text-decoration: none;
    }

    .version-container .pre-release-message {
        color: hsl(var(--text-muted));
        font-size: .7em;
        font-weight: 700;
        text-align: center;
        text-wrap: balance;
    }

    .version-container:hover, .version-check:hover {
        color: hsl(var(--primary-base));
        cursor: pointer;
    }

    .latest-update-check {
        color: hsl(var(--text-muted));
        font-size: .6em;
        font-weight: 700;
        text-align: center;
    }

    .version-modal-links {
        display: flex;
        flex-direction: row;
        gap: 0.5rem;
        align-items: center;
    }

    .reload-button {
        padding: 0.125rem;
        border: 2px solid hsl(var(--border));
        border-radius: 0.5rem;
        width: 1.5rem;
        height: 1.5rem;
        align-items: center;
        justify-content: center;
        vertical-align: middle;
        cursor: pointer;
        transition: all 0.15s ease;
        margin-left: 0.25rem;
        &:hover {
            background-color: hsl(var(--border));

            .reload {
                background-color: hsl(var(--primary-base));
            }
        }
    }

    .reload {
        display: inline-block;
        width: 16px;
        height: 16px;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0l3.181 3.183a8.25 8.25 0 0 0 13.803-3.7M4.031 9.865a8.25 8.25 0 0 1 13.803-3.7l3.181 3.182m0-4.991v4.99'/%3E%3C/svg%3E");
        background-color: hsl(var(--text-muted));
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
    }

    .outdated {
        display: inline-block;
        width: 20px;
        height: 20px;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m15 11.25l-3-3m0 0l-3 3m3-3v7.5M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0'/%3E%3C/svg%3E");
        background-color: hsl(var(--warning-base));
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
    }

    .latest {
        display: inline-block;
        width: 20px;
        height: 20px;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M9 12.75L11.25 15L15 9.75M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0'/%3E%3C/svg%3E");
        background-color: hsl(var(--success-base));
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
    }

    .future {
        display: inline-block;
        width: 18px;
        height: 18px;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M9.75 3.104v5.714a2.25 2.25 0 0 1-.659 1.591L5 14.5M9.75 3.104q-.376.034-.75.082m.75-.082a24.3 24.3 0 0 1 4.5 0m0 0v5.714c0 .597.237 1.17.659 1.591L19.8 15.3M14.25 3.104q.377.034.75.082M19.8 15.3l-1.57.393A9.07 9.07 0 0 1 12 15a9.07 9.07 0 0 0-6.23-.693L5 14.5m14.8.8l1.402 1.402c1.232 1.232.65 3.318-1.067 3.611A48.3 48.3 0 0 1 12 21a48 48 0 0 1-8.135-.687c-1.718-.293-2.3-2.379-1.067-3.61L5 14.5'/%3E%3C/svg%3E");
        background-color: hsl(var(--primary-base));
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
    }

    .brand--github {
        display: inline-block;
        width: 24px;
        height: 24px;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%23000' d='M12 2A10 10 0 0 0 2 12c0 4.42 2.87 8.17 6.84 9.5c.5.08.66-.23.66-.5v-1.69c-2.77.6-3.36-1.34-3.36-1.34c-.46-1.16-1.11-1.47-1.11-1.47c-.91-.62.07-.6.07-.6c1 .07 1.53 1.03 1.53 1.03c.87 1.52 2.34 1.07 2.91.83c.09-.65.35-1.09.63-1.34c-2.22-.25-4.55-1.11-4.55-4.92c0-1.11.38-2 1.03-2.71c-.1-.25-.45-1.29.1-2.64c0 0 .84-.27 2.75 1.02c.79-.22 1.65-.33 2.5-.33s1.71.11 2.5.33c1.91-1.29 2.75-1.02 2.75-1.02c.55 1.35.2 2.39.1 2.64c.65.71 1.03 1.6 1.03 2.71c0 3.82-2.34 4.66-4.57 4.91c.36.31.69.92.69 1.85V21c0 .27.16.59.67.5C19.14 20.16 22 16.42 22 12A10 10 0 0 0 12 2'/%3E%3C/svg%3E");
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
    }

    .brand--npm {
        display: inline-block;
        width: 32px;
        height: 32px;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%23000' d='M4 10v4h2v-3h1v3h1v-4zm5 0v5h2v-1h2v-4zm3 1v2h-1v-2zm2-1v4h2v-3h1v3h1v-3h1v3h1v-4zM3 9h18v6h-9v1H8v-1H3z'/%3E%3C/svg%3E");
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
    }
</style>
