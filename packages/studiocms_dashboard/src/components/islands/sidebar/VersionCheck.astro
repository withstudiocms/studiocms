---
import { getUserData, verifyUserPermissionLevel } from 'studiocms:auth/lib/user';
import changelog from 'studiocms:changelog';
import { StudioCMSRoutes } from 'studiocms:lib';
import { StudioCMSRenderer } from 'studiocms:renderer';
import studioCMS_SDK_Cache from 'studiocms:sdk/cache';
import currentVersion from 'studiocms:version';
import { Modal } from '@studiocms/ui/components';
import { compare } from 'semver';
import { dateWithTimeAndZone } from '../../component-scripts/dateWithTimeAndZone';
import { timeAgo } from '../../component-scripts/timeAgo';
import VersionCheckPart from '../../shared-parts/VersionCheck.astro';
import VersionCheckChangelog from './VersionCheckChangelog.astro';

const data = await getUserData(Astro);

const isAdmin = await verifyUserPermissionLevel(data, 'admin');

const latestVersion = await studioCMS_SDK_Cache.GET.latestVersion();

const lastChecked = latestVersion.lastCacheUpdate;

const comparison = compare(currentVersion, latestVersion.version);

const status = comparison === -1 ? 'outdated' : comparison === 0 ? 'latest' : 'future';
---
<div class="version-container" id="version-modal-trigger" title="Click for more information" aria-label="Click for more information">
    <VersionCheckPart {status} />
</div>

{ isAdmin && ( 
    <Modal id="version-modal" size="lg">

        <h2 slot="header" class="inline-title">
            <span>Version Information</span>
            <button data-link={StudioCMSRoutes.sdk.updateLatestVersionCache} 
                id="version-modal-reload"
                class="reload-button" 
                title="Check for updates" 
                aria-label="Check for updates"
                ><span class="reload"></span>
            </button>
        </h2>

        <div>
            <div class="version-modal-top-row">
                <div class="version-modal-col">
                    <span class="version-modal-col-title">Current Version</span>
                    <code class="version-modal-col-value">v{currentVersion}</code>
                </div>

                <div class="version-modal-col">
                    <span class="version-modal-col-title">Latest Version</span>
                    <code id="latest-version" class="version-modal-col-value">v{latestVersion.version}</code>
                </div>

                <div class="version-modal-col">
                    <span class="version-modal-col-title">Last Update Check</span>
                    <span class="version-modal-col-value">
                        <time id="version-modal-last-checked-date" datetime={lastChecked.toISOString()}>{dateWithTimeAndZone(lastChecked)}</time>
                        <span id="latest-update-check" class="latest-update-check">({timeAgo(lastChecked)})</span>
                    </span>
                </div>
            </div>

            <div class="version-modal-release-notes">
                <div><StudioCMSRenderer content={changelog} /></div>
                <span class="release-notes-read-more">
                    <VersionCheckChangelog link="/studiocms_api/sdk/full-changelog.json"><span class="read-more-text">Full Changelog</span></VersionCheckChangelog>
                </span>
            </div>

            <div class="version-modal-links">
                <span class="version-modal-row-title">View on</span>
                <a href="https://github.com/withstudiocms/studiocms/releases" 
                    target="_blank" 
                    class="version-link"
                    title="View Releases on GitHub"
                    aria-label="View Releases on GitHub"
                    ><span class="brand--github"></span>
                </a>
                <a href="https://npm.im/studiocms" 
                    target="_blank" 
                    class="version-link"
                    title="View on NPM"
                    aria-label="View on NPM"
                    ><span class="brand--npm"></span>
                </a>
            </div>
        </div>
    </Modal>
)}

<script>
    import { ModalHelper } from '@studiocms/ui/components';
    import { dateTimeListener } from '../../component-scripts/dateTimeListener';
    import { dateWithTimeAndZone } from '../../component-scripts/dateWithTimeAndZone';
    import { timeAgo } from '../../component-scripts/timeAgo';
    import type { VersionCacheObject } from 'studiocms:sdk/cache';

    const reloadButton = document.getElementById('version-modal-reload') as HTMLButtonElement;
    const timeElem = document.getElementById('version-modal-last-checked-date') as HTMLTimeElement;
    const latestUpdateCheck = document.getElementById('latest-update-check') as HTMLSpanElement;
    const latestVersionElem = document.getElementById('latest-version') as HTMLElement;

    new ModalHelper('version-modal', 'version-modal-trigger')
    dateTimeListener('version-modal-last-checked-date')

    document.addEventListener('astro:page-load', () => {
        reloadButton.addEventListener('click', async () => {
            const response = await fetch(reloadButton.dataset.link!);
            if (response.ok) {
                const data: { success: boolean, latestVersion: VersionCacheObject } = await response.json();

                if (data.success) {
                    latestVersionElem.textContent = `v${data.latestVersion.version}`;
                    timeElem.dateTime = new Date(data.latestVersion.lastCacheUpdate).toISOString();
                    timeElem.textContent = dateWithTimeAndZone(new Date(data.latestVersion.lastCacheUpdate));
                    latestUpdateCheck.textContent = `(${timeAgo(new Date(data.latestVersion.lastCacheUpdate))})`;
                }
            }
        });
    });

    document.addEventListener('astro:after-swap', () => {
        new ModalHelper('version-modal', 'version-modal-trigger')
        dateTimeListener('version-modal-last-checked-date')
    });

</script>

<style>

    .inline-title {
        display: flex;
        flex-direction: row;
        gap: 0.5rem;
        virtual-align: middle;
        align-items: center;
        justify-content: start;
    }

    .version-modal-top-row {
        display: grid;
        grid-template-columns: 1fr 1fr 2fr;
        gap: 1rem;
    }

    @media screen and (max-width: 768px) {
        .version-modal-top-row {
            grid-template-columns: 1fr;
        }
        
    }

    .release-notes-read-more {
        display: flex;
        flex-direction: row-reverse;
        margin-top: 1rem;
        font-size: 1rem;

        .read-more-text {
            color: hsl(var(--text-muted));
            text-align: end;
            font-weight: 700;
            cursor: pointer;
        }

        .read-more-text:hover {
            color: hsl(var(--primary-base));
            text-decoration: underline;
        }

        a {
            color: hsl(var(--text-muted));
            text-decoration: none;
            font-weight: 700;
        }

        a:hover {
            color: hsl(var(--primary-base));
        }
    }

    .version-modal-col {
        display: flex;
        flex-direction: column;
        gap: 0.25rem;
    }

    .version-modal-col-title {
        font-weight: 700;
    }

    .version-modal-row-title {
        font-weight: 700;
        color: hsl(var(--text-muted));
    }

    .version-modal-col-value {
        font-weight: 500;
    }

    .version-modal-release-notes {
        border: 1px solid hsl(var(--border));
        border-radius: 0.5rem;
        padding: 1rem;
        overflow: auto;
        max-height: 50vh;
        margin-top: 1rem;
        margin-bottom: 1rem;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .latest-update-check {
        color: hsl(var(--text-muted));
        font-size: .7em;
        font-weight: 700;
        text-align: center;
    }

    .version-container {
        display: flex;
        flex-direction: column;
        gap: .05rem;
        width: 100%;
        color: hsl(var(--text-muted));
        cursor: default;
    }

    .version-link {
        text-decoration: none !important;
    }

    a:-webkit-any-link:hover {
        text-decoration: underline;
        color: hsl(var(--primary-base));
    }

    a:-webkit-any-link {
        color: hsl(var(--text-muted));
        text-decoration: none;
    }


    .version-modal-links {
        display: flex;
        flex-direction: row;
        gap: 0.5rem;
        align-items: center;
        vertical-align: middle;
    }

    .reload-button {
        display: flex;
        padding: 0.125rem;
        border: 2px solid hsl(var(--border));
        border-radius: 0.5rem;
        width: 1.5rem;
        height: 1.5rem;
        align-items: center;
        justify-content: center;
        vertical-align: middle;
        cursor: pointer;
        transition: all 0.15s ease;
        margin-left: 0.25rem;
        &:hover {
            background-color: hsl(var(--border));

            .reload {
                background-color: hsl(var(--primary-base));
            }
        }
    }

    .reload {
        display: inline-block;
        width: 16px;
        height: 16px;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0l3.181 3.183a8.25 8.25 0 0 0 13.803-3.7M4.031 9.865a8.25 8.25 0 0 1 13.803-3.7l3.181 3.182m0-4.991v4.99'/%3E%3C/svg%3E");
        background-color: hsl(var(--text-muted));
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
    }

    .brand--github {
        display: inline-block;
        width: 24px;
        height: 24px;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%23000' d='M12 2A10 10 0 0 0 2 12c0 4.42 2.87 8.17 6.84 9.5c.5.08.66-.23.66-.5v-1.69c-2.77.6-3.36-1.34-3.36-1.34c-.46-1.16-1.11-1.47-1.11-1.47c-.91-.62.07-.6.07-.6c1 .07 1.53 1.03 1.53 1.03c.87 1.52 2.34 1.07 2.91.83c.09-.65.35-1.09.63-1.34c-2.22-.25-4.55-1.11-4.55-4.92c0-1.11.38-2 1.03-2.71c-.1-.25-.45-1.29.1-2.64c0 0 .84-.27 2.75 1.02c.79-.22 1.65-.33 2.5-.33s1.71.11 2.5.33c1.91-1.29 2.75-1.02 2.75-1.02c.55 1.35.2 2.39.1 2.64c.65.71 1.03 1.6 1.03 2.71c0 3.82-2.34 4.66-4.57 4.91c.36.31.69.92.69 1.85V21c0 .27.16.59.67.5C19.14 20.16 22 16.42 22 12A10 10 0 0 0 12 2'/%3E%3C/svg%3E");
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
    }

    .brand--npm {
        display: inline-block;
        width: 32px;
        height: 32px;
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%23000' d='M4 10v4h2v-3h1v3h1v-4zm5 0v5h2v-1h2v-4zm3 1v2h-1v-2zm2-1v4h2v-3h1v3h1v-3h1v3h1v-4zM3 9h18v6h-9v1H8v-1H3z'/%3E%3C/svg%3E");
        background-color: currentColor;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
    }
</style>
