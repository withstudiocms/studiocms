---
import { getUserData, verifyUserPermissionLevel } from 'studiocms:auth/lib/user';
import { StudioCMSRoutes } from 'studiocms:lib';

interface Props {
	requiredPermission: 'owner' | 'admin' | 'editor' | 'visitor' | 'unknown';
}

const { requiredPermission } = Astro.props;

const user = await getUserData(Astro);

const isAuthorized = await verifyUserPermissionLevel(user, requiredPermission);
---

<login-check
    data-is_logged_in={`${user.isLoggedIn}`}
    data-authorized={`${isAuthorized}`}
    data-redirect_profile={StudioCMSRoutes.mainLinks.userProfile}
    data-redirect_login={StudioCMSRoutes.authLinks.loginURL}
    style="display: hidden;" 
></login-check>

<script is:inline>
    if (!customElements.get('login-check')) {
        class LoginCheck extends HTMLElement {
            constructor() {
                super();
                const authorized = this.dataset.authorized;
                const isLoggedIn = this.dataset.is_logged_in;
                const redirectProfile = this.dataset.redirect_profile;
                const redirectLogin = this.dataset.redirect_login;

                console.log('Checking user permissions and login status');

                if (isLoggedIn === 'false') {
                    console.log('redirecting to login');
                    window.location.href = redirectLogin;
                }

                if (window.location.pathname === redirectProfile) {
                    console.log('User is on profile page');
                    return;
                }

                if (authorized === 'false') {
                    console.log('redirecting to profile');
                    window.location.href = redirectProfile;
                }
            }
        }

        customElements.define('login-check', LoginCheck);
    }
</script>