---
import { validImages } from 'studiocms:auth/utils/validImages';
import { studioCMS_SDK_Cache } from 'studiocms:sdk/cache';
import { Input, Select } from '@studiocms/ui/components';

const { data } = await studioCMS_SDK_Cache.GET.siteConfig();

const ogSelectOptions = validImages.map(({ label, name: value }) => ({ label, value }));
---

<form id="site-config-form">
    <div class="form-content">

        <div class="form-row">
            <Input label='Site Title' name='site-title' placeholder='My Awesome Website' value={data.title} isRequired />
            <Input label='Site Description' name='site-description' placeholder='Built with StudioCMS!' value={data.description} isRequired />
        </div>

        <div class="form-row">
            <Input label="Default Open Graph Image" name="default-og-image" placeholder="'https://...' for local, or '/...' for public/ folder" value={data.defaultOgImage} />
            <Input label="Site Icon (Public facing Favicon)" name="site-icon" placeholder="'https://...' for local, or '/...' for public/ folder" value={data.siteIcon} />
        </div>

        <div class="form-row">
            <Select label='Login Page Background Image' name='login-page-background' defaultValue={data.loginPageBackground} options={ogSelectOptions} fullWidth />
            <Input label="Login Page Background Image (Custom)" name="login-page-background-custom" placeholder="'https://...' for local, or '/...' for public/ folder" value={data.loginPageCustomImage} disabled={data.loginPageBackground !== 'custom'} />
        </div>

    </div>
</form>

<script is:inline>
// Handle enabling/disabling the custom login page background image input if the user selects 'custom' from the LoginPageBackground dropdown
const loginPageBgSelect = document.querySelector('#login-page-background-dropdown');

loginPageBgSelect.querySelectorAll('.sui-select-option').forEach((option) => {
    option.addEventListener('click', (event) => {
        const selectedValue = option.getAttribute('value');

        if (selectedValue === 'custom') {
            document.querySelector('input[name="login-page-background-custom"]').removeAttribute('disabled');
            document.querySelector('label[for="login-page-background-custom"]').classList.remove('disabled');
        } else {
            document.querySelector('input[name="login-page-background-custom"]').setAttribute('disabled', 'disabled');
            document.querySelector('label[for="login-page-background-custom"]').classList.add('disabled');
        }
    });
});
</script>

<style>
    .form-content {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .form-row {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 1rem;
    }

    @media screen and (max-width: 768px) {
        .form-row {
            grid-template-columns: 1fr;
        }
    }
</style>