---
import { getUserData } from 'studiocms:auth/lib/user';
import { StudioCMSRoutes } from 'studiocms:lib';
import { Button, Card, Icon, Input } from 'studiocms:ui/components';

const data = await getUserData(Astro);

const userHasNoPassword = data.user?.password === null;
---

<Card fullWidth as="form" id="password-update-form" class="password-update-form" action={StudioCMSRoutes.endpointLinks.profile}>

    <div slot="header">
        <h2>{userHasNoPassword ? "Create" : "Update"} Password</h2>
    
        <div class="form-header">
            <Button 
                type='submit' 
                variant='solid' 
                color='primary' 
                disabled={userHasNoPassword}
                 size='sm'
                >
                <Icon slot="start-content" name="check" width={24} height={24} />
                {userHasNoPassword ? "Set" : "Save"}
            </Button> 
        </div>
    </div>

    {userHasNoPassword && ( 
        <p>
            It looks like your account doesn't have a password set. You can set one by using the form below.
        </p>
    )}

    <div class="password-form-entries">

        <Input 
            label='Current Password' 
            type='password'
            placeholder='********' 
            isRequired={!userHasNoPassword}
            disabled={userHasNoPassword}
            name='current-password' 
            autocomplete='current-password'
            />

        <Input 
            label='New Password' 
            type='password'
            placeholder='********' 
            isRequired 
            autocomplete='password new_password'
            name='new-password' 
            />

        <Input 
            label='Confirm New Password' 
            type='password'
            placeholder='********' 
            isRequired 
            autocomplete='password new_password'
            name='confirm-new-password' 
            />

    </div>
</Card>

<script>
    import { toast } from "studiocms:ui/components";

    function passwordChange() {
        const passwordUpdateForm = document.getElementById('password-update-form') as HTMLFormElement;

        passwordUpdateForm.addEventListener('submit', async (e) => {
            e.preventDefault();

            const formData = new FormData(passwordUpdateForm);

            const data = {
                currentPassword: formData.get('current-password') ?? null,
                newPassword: formData.get('new-password') as string,
                confirmNewPassword: formData.get('confirm-new-password') as string,
            }

            const response = await fetch(passwordUpdateForm.action, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data)
            })

            const res = await response.json();

            if (response.status !== 200) {
                toast({
                    title: 'Error',
                    description: res.error,
                    type: 'danger'
                })
            }

            if (response.status === 200) {
                toast({
                    title: 'Success',
                    description: res.message,
                    type: 'success'
                })
            }
        });
    }

    document.addEventListener('astro:page-load', passwordChange);
    passwordChange();
</script>

<style>
    .password-update-form {
        position: relative;
    }

    .password-update-form .password-form-entries {
        display: grid;
        gap: 1rem;
        grid-template-columns: 1fr 1fr 1fr;

        @media (max-width: 1024px) {
            grid-template-columns: 1fr 1fr;
        }

        @media (max-width: 768px) {
            grid-template-columns: 1fr;
        }
    }

    .form-header {
        display: block;
        position: absolute;
        top: 1rem;
        right: 1rem;
    }
</style>
