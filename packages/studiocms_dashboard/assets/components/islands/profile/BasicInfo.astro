---
import { getUserData } from 'studiocms:auth/lib/user';
import { StudioCMSRoutes } from 'studiocms:lib';
import { Button, Card, Icon, Input } from 'studiocms:ui/components';

const data = await getUserData(Astro);
---

<Card fullWidth as="form" id="basic-info-form" class="basic-info-form" action={StudioCMSRoutes.endpointLinks.profile}>

    <div slot="header">
        <h2>Basic Info</h2>
    
        <div class="form-header">
            <Button type='submit' size='sm' variant={'solid'} color='primary'>
                <Icon slot="start-content" name="check" width={24} height={24} />
                Save
            </Button> 
        </div>
    </div>

    <div class="form-inputs">

        <Input label='Display Name' placeholder='John Doe' value={data.user?.name} isRequired name='display-name' />

        <Input label='Username' placeholder='johndoe' value={data.user?.username} isRequired name='username' />
    
        <Input label='Email' placeholder='john@doe.com' value={data.user?.email} isRequired name='email' />
    
        <Input label='Website' placeholder='https://doe.com' value={data.user?.url} name='account-url' />

    </div>

</Card>

<script>
    import { toast } from "studiocms:ui/components";

    function setupBasicInfoForm() {
        const basicInfoForm = document.getElementById('basic-info-form') as HTMLFormElement;
        basicInfoForm.addEventListener('submit', async (e) => {
            e.preventDefault();

            const formData = new FormData(basicInfoForm);

            const data = {
                mode: 'basic',
                data: {
                    name: formData.get('display-name') as string,
                    username: formData.get('username') as string,
                    email: formData.get('email') as string,
                    url: formData.get('account-url') ?? null,
                }
            }

            const response = await fetch(basicInfoForm.action, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data)
            })

            const res = await response.json();

            if (response.status !== 200) {
                toast({
                    title: 'Error',
                    description: res.error,
                    type: 'danger'
                })
            }

            if (response.status === 200) {
                toast({
                    title: 'Success',
                    description: res.message,
                    type: 'success'
                })
            }

        });
    }

    document.addEventListener('astro:page-load', setupBasicInfoForm);
    setupBasicInfoForm();
</script>

<style>

    .basic-info-form {
        position: relative;
    }

    .basic-info-form .form-inputs {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 1rem;

        @media screen and (max-width: 768px) {
            grid-template-columns: 1fr;
        }
    }

    .form-header {
        display: block;
        position: absolute;
        top: 1rem;
        right: 1rem;
    }

</style>
