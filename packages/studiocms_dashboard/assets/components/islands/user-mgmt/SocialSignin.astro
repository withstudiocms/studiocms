---
import { Button, Card, Center, Icon } from 'studiocms:ui/components';
import { providerData } from '../profile/oAuthButtonProviders';

interface Props {
	oAuthData?: {
		provider: string;
		providerUserId: string;
		userId: string;
	}[];
}

const { oAuthData } = Astro.props;

const hasOAuthData = oAuthData && oAuthData.length > 0;

const connectedAccounts: { provider: string }[] = [];

if (hasOAuthData) {
	for (const provider in oAuthData) {
		connectedAccounts.push({ provider });
	}
}

const socialProviders = providerData.map((providerData) => ({
	...providerData,
	connected: connectedAccounts.some(
		({ provider }) => provider === providerData.label.toLowerCase()
	),
}));

const connectedProviders = socialProviders.filter(({ connected }) => connected);
---
    
<div class="text-h3">Connected Accounts</div>

<Card fullWidth class="social-signin-bg">

    <div class="button-holder">
        {
            connectedProviders.map(({ enabled, href, image, label }) => enabled && (
                <Button as="a" href={href} variant="solid" size="md" fullWidth class="oauth-button">
                    <div class="icon-and-label">
                        <Fragment set:html={image} />
                        <span>{label}</span>
                    </div>
                </Button>
            ))
        }

        {
            connectedProviders.length === 0 && (
                <Center><div>No connected accounts found.</div></Center>
            )
        }
    </div>

</Card>

<style>
    .social-signin-options {
        display: flex;
        flex-direction: column;
    }

    .social-signin-cards {
        display: flex;
        flex-direction: row;
        gap: 1rem;
        height: 100%;
    }

    @media screen and (max-width: 768px) {
        .social-signin-cards {
            flex-direction: column;
        }
    }

    .social-signin-bg {
        background-color: hsl(var(--background-step-1));
        height: auto;
        width: auto;
    }

    .oauth-button {
        display: flex;
        align-items: stretch;
        justify-content: space-between !important;
        width: 100%;
        margin-button: 1rem;
    }

    .icon-and-label {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .button-holder {
        display: flex;
        flex-direction: column;
        gap: .5rem;
    }
    
</style>