---
import '../../../styles/tiny-mde.css';
import { studioCMS_SDK_Cache } from 'studiocms:sdk/cache';
import { Input, Select, TabItem, Tabs } from 'studiocms:ui/components';
import {
	categoriesOptions,
	pageTypeOptions,
	parentFolderOptions,
	tagsOptions,
	trueFalse,
} from './shared';

const urlParams = Astro.url.searchParams;
const editId = urlParams.get('edit') || '';

const { data: pageData } = await studioCMS_SDK_Cache.GET.page.byId(editId);

function getParentFolderValue(value: string | null): string | undefined {
	const options = parentFolderOptions;
	if (value === null) return 'null';
	return options.find((option: { value: FormDataEntryValue }) => option.value === value)?.value;
}
---
<div id="edit-page-container">
    <form id="edit-page-form">

        <Tabs variant={'starlight'}>
          <TabItem label='Basic Information' icon={'information-circle-20-solid'} color={'primary'}>
            <div class="tab-section">
                <div class="form-row">
                    <Input label='Page Title' name='page-title' isRequired defaultValue={pageData.title} />
                    <Input label='Slug' name='page-slug' disabled isRequired defaultValue={pageData.slug} />
        
                    <input type="hidden" name="page-slug" value={pageData.slug} />
                    <input type="hidden" name="page-id" value={pageData.id} />
                </div>
        
                <div class="form-row">
                    <Input label='Description' name='page-description' isRequired defaultValue={pageData.description}/>
                    <Input label='OpenGraph/Hero Image' name='page-hero-image' placeholder='https://...' defaultValue={pageData.heroImage} />
                </div>
        
                <div class="form-row">
                    <Select 
                        label="Page type" 
                        name="page-type" 
                        isRequired 
                        fullWidth 
                        defaultValue={pageData.package}
                        options={pageTypeOptions} 
                        />
                    <Select 
                        label="Show in Navigation" 
                        name="show-in-nav" 
                        isRequired 
                        defaultValue={`${pageData.showOnNav}`}
                        fullWidth 
                        options={trueFalse} 
                        />
                </div>
        
                <div class="form-row">
                    <Select label="Parent Folder" name="parent-folder" fullWidth options={parentFolderOptions} defaultValue={getParentFolderValue(pageData.parentFolder)} />
                    <Select label="Draft" name="draft" fullWidth options={trueFalse} defaultValue={`${pageData.draft ?? false}`} disabled={pageData.slug === 'index'} />
                </div>
        
                <div class="form-row">
                    <Select label="Categories" name="categories" placeholder="Work in Progress" fullWidth options={categoriesOptions} disabled />
                    <Select label="Tags" name="tags" placeholder="Work in Progress" fullWidth options={tagsOptions} disabled />
                </div>
        
                <div class="form-row">
                    <Select label="Show Author" name="show-author" defaultValue={`${pageData.showAuthor}`} fullWidth options={trueFalse} />
                    <Select label="Show Contributors" name="show-contributors" defaultValue={`${pageData.showContributors}`} fullWidth options={trueFalse} />
                </div>
            </div>
          </TabItem>
          <TabItem label='Page Content' icon={'document-text-20-solid'} color={'success'}>

            <input type="hidden" name="page-content-id" value={pageData.defaultContent?.id} />

            <div class="tab-section">
                <div class="page-content-editor">
                    <div id="editor-toolbar"></div>
                    <div class="editor-container">
                        <textarea id="page-content" name="page-content">{pageData.defaultContent?.content}</textarea>
                    </div>
                </div>
            </div>
          </TabItem>
        </Tabs>

    </form>
</div>

<div 
    id="edit-page-grabber" 
    style="display: none;"
    data-page_type_options={JSON.stringify(pageTypeOptions)}
    data-show_in_nav_options={JSON.stringify(trueFalse)}
    data-categories_options={JSON.stringify(categoriesOptions)}
    data-tags_options={JSON.stringify(tagsOptions)}
    data-parent_folder_options={JSON.stringify(parentFolderOptions)}
    data-show_author_options={JSON.stringify(trueFalse)}
    data-show_contributors_options={JSON.stringify(trueFalse)}
    >
</div>

<script>
async function listener() {

    const editPageGrabber = document.getElementById('edit-page-grabber') as HTMLElement;

    if (!editPageGrabber) return;
  
    // get the elements
    const editPageForm = document.getElementById('edit-page-form') as HTMLFormElement;

    function getParentFolderValue(value?: string) {
        if (value === 'null') return null;
        return value;
      }

    editPageForm.addEventListener('submit', (e) => {
        e.preventDefault();
        const formData = new FormData(editPageForm);

        const data = {
            title: formData.get('page-title')?.toString(),
            slug: formData.get('page-slug')?.toString(),
            description: formData.get('page-description')?.toString(),
            package: formData.get('page-type')?.toString(),
            showOnNav: formData.get('show-in-nav') === 'true',
            heroImage: formData.get('page-hero-image')?.toString(),
            parentFolder: getParentFolderValue(formData.get('parent-folder')?.toString()),
            showAuthor: formData.get('show-author') === 'true',
            showContributors: formData.get('show-contributors')?.toString() === 'true',
            categories: [],
            tags: [],
            id: formData.get('page-id')?.toString(),
            draft: formData.get('draft')?.toString() === 'true',
        };

        const content = {
            id: formData.get('page-content-id')?.toString(),
            content: formData.get('page-content')?.toString(),
        }

        console.log(data, content);

        // TODO: Setup form submission and api call
    });
}
document.addEventListener('astro:page-load', listener);
listener();
</script>

<script is:inline>
    function listener() {
    const editPageForm = document.getElementById('edit-page-form');

    const pageContentTextarea = editPageForm.querySelector('#page-content');
    const editorToolbar = editPageForm.querySelector('#editor-toolbar');
    // Setup the TinyMDE editor
    // See https://github.com/jefago/tiny-markdown-editor/tree/main for more details
    // @ts-expect-error - Added TinyMDE to the window object
    var tinyMDE = new TinyMDE.Editor({ textarea: pageContentTextarea });
    // @ts-expect-error - Added TinyMDE to the window object
    var commandBar = new TinyMDE.CommandBar({
        element: editorToolbar,
        editor: tinyMDE,
        commands: [
            {
                name: 'bold',
                action: 'bold',
                innerHTML: '<svg xmlns="http://www.w3.org/2000/svg" fill="none" width="18px" height="18px" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6"> <path stroke-linejoin="round" d="M6.75 3.744h-.753v8.25h7.125a4.125 4.125 0 0 0 0-8.25H6.75Zm0 0v.38m0 16.122h6.747a4.5 4.5 0 0 0 0-9.001h-7.5v9h.753Zm0 0v-.37m0-15.751h6a3.75 3.75 0 1 1 0 7.5h-6m0-7.5v7.5m0 0v8.25m0-8.25h6.375a4.125 4.125 0 0 1 0 8.25H6.75m.747-15.38h4.875a3.375 3.375 0 0 1 0 6.75H7.497v-6.75Zm0 7.5h5.25a3.75 3.75 0 0 1 0 7.5h-5.25v-7.5Z" /> </svg> ',
                title: 'Bold',
                hotkey: 'Mod-B',
            }, 
            {
                name: 'italic',
                action: 'italic',
                innerHTML: '<svg xmlns="http://www.w3.org/2000/svg" fill="none" width="18px" height="18px" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6"> <path stroke-linecap="round" stroke-linejoin="round" d="M5.248 20.246H9.05m0 0h3.696m-3.696 0 5.893-16.502m0 0h-3.697m3.697 0h3.803" /> </svg> ',
                title: 'Italic',
                hotkey: 'Mod-I',
            }, 
            {
                name: 'strikethrough',
                action: 'strikethrough',
                innerHTML: '<svg xmlns="http://www.w3.org/2000/svg" fill="none" width="18px" height="18px" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6"> <path stroke-linecap="round" stroke-linejoin="round" d="M12 12a8.912 8.912 0 0 1-.318-.079c-1.585-.424-2.904-1.247-3.76-2.236-.873-1.009-1.265-2.19-.968-3.301.59-2.2 3.663-3.29 6.863-2.432A8.186 8.186 0 0 1 16.5 5.21M6.42 17.81c.857.99 2.176 1.812 3.761 2.237 3.2.858 6.274-.23 6.863-2.431.233-.868.044-1.779-.465-2.617M3.75 12h16.5" /> </svg> ',
                title: 'Strikethrough',
                hotkey: 'Mod2-Shift-5',
            }, 
            {
                name: 'h1',
                action: 'h1',
                innerHTML: '<svg xmlns="http://www.w3.org/2000/svg" fill="none" width="18px" height="18px" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6"> <path stroke-linecap="round" stroke-linejoin="round" d="M2.243 4.493v7.5m0 0v7.502m0-7.501h10.5m0-7.5v7.5m0 0v7.501m4.501-8.627 2.25-1.5v10.126m0 0h-2.25m2.25 0h2.25" /> </svg> ',
                title: 'Level 1 heading',
                hotkey: 'Mod-Shift-1',
            },
            {
                name: 'h2',
                action: 'h2',
                innerHTML: '<svg xmlns="http://www.w3.org/2000/svg" fill="none" width="18px" height="18px" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6"> <path stroke-linecap="round" stroke-linejoin="round" d="M21.75 19.5H16.5v-1.609a2.25 2.25 0 0 1 1.244-2.012l2.89-1.445c.651-.326 1.116-.955 1.116-1.683 0-.498-.04-.987-.118-1.463-.135-.825-.835-1.422-1.668-1.489a15.202 15.202 0 0 0-3.464.12M2.243 4.492v7.5m0 0v7.502m0-7.501h10.5m0-7.5v7.5m0 0v7.501" /> </svg> ',
                title: 'Level 2 heading',
                hotkey: 'Mod-Shift-2',
            },
            {
                name: 'h3',
                action: 'h3',
                innerHTML: '<svg xmlns="http://www.w3.org/2000/svg" fill="none" width="18px" height="18px" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6"> <path stroke-linecap="round" stroke-linejoin="round" d="M20.905 14.626a4.52 4.52 0 0 1 .738 3.603c-.154.695-.794 1.143-1.504 1.208a15.194 15.194 0 0 1-3.639-.104m4.405-4.707a4.52 4.52 0 0 0 .738-3.603c-.154-.696-.794-1.144-1.504-1.209a15.19 15.19 0 0 0-3.639.104m4.405 4.708H18M2.243 4.493v7.5m0 0v7.502m0-7.501h10.5m0-7.5v7.5m0 0v7.501" /> </svg> ',
                title: 'Level 3 heading',
            },
            '|', 
            {
                name: 'ul',
                action: 'ul',
                innerHTML: '<svg xmlns="http://www.w3.org/2000/svg" fill="none" width="18px" height="18px" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6"> <path stroke-linecap="round" stroke-linejoin="round" d="M8.25 6.75h12M8.25 12h12m-12 5.25h12M3.75 6.75h.007v.008H3.75V6.75Zm.375 0a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0ZM3.75 12h.007v.008H3.75V12Zm.375 0a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0Zm-.375 5.25h.007v.008H3.75v-.008Zm.375 0a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0Z" /> </svg> ',
                title: 'Bulleted list',
            },
            {
                name: 'ol',
                action: 'ol',
                innerHTML: '<svg xmlns="http://www.w3.org/2000/svg" fill="none" width="18px" height="18px" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6"> <path stroke-linecap="round" stroke-linejoin="round" d="M8.242 5.992h12m-12 6.003H20.24m-12 5.999h12M4.117 7.495v-3.75H2.99m1.125 3.75H2.99m1.125 0H5.24m-1.92 2.577a1.125 1.125 0 1 1 1.591 1.59l-1.83 1.83h2.16M2.99 15.745h1.125a1.125 1.125 0 0 1 0 2.25H3.74m0-.002h.375a1.125 1.125 0 0 1 0 2.25H2.99" /> </svg> ',
                title: 'Numbered list',
            }, 
            '|', 
            'blockquote',
            {
                name: 'code',
                action: 'code',
                innerHTML: '<svg xmlns="http://www.w3.org/2000/svg" fill="none" width="18px" height="18px" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6"> <path stroke-linecap="round" stroke-linejoin="round" d="M17.25 6.75 22.5 12l-5.25 5.25m-10.5 0L1.5 12l5.25-5.25m7.5-3-4.5 16.5" /> </svg> ',
                title: 'Format as code',
            },
            '|', 
            {
                name: 'insertLink',
                // @ts-expect-error - Added TinyMDE to the window object
                action: (editor) => {if (editor.isInlineFormattingAllowed()) editor.wrapSelection('[', ']()')},
                // @ts-expect-error - Added TinyMDE to the window object
                enabled: (editor, focus, anchor) => editor.isInlineFormattingAllowed(focus, anchor) ? false : null,
                innerHTML: '<svg xmlns="http://www.w3.org/2000/svg" fill="none" width="18px" height="18px" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6"> <path stroke-linecap="round" stroke-linejoin="round" d="M13.19 8.688a4.5 4.5 0 0 1 1.242 7.244l-4.5 4.5a4.5 4.5 0 0 1-6.364-6.364l1.757-1.757m13.35-.622 1.757-1.757a4.5 4.5 0 0 0-6.364-6.364l-4.5 4.5a4.5 4.5 0 0 0 1.242 7.244" /> </svg> ',
                title: 'Insert link',
                hotkey: 'Mod-K',
            }, 
            {
                name: 'insertImage',
                // @ts-expect-error - Added TinyMDE to the window object
                action: (editor) => {if (editor.isInlineFormattingAllowed()) editor.wrapSelection('![', ']()')},
                // @ts-expect-error - Added TinyMDE to the window object
                enabled: (editor, focus, anchor) => editor.isInlineFormattingAllowed(focus, anchor) ? false : null,
                innerHTML: '<svg xmlns="http://www.w3.org/2000/svg" fill="none" width="18px" height="18px" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6"> <path stroke-linecap="round" stroke-linejoin="round" d="m2.25 15.75 5.159-5.159a2.25 2.25 0 0 1 3.182 0l5.159 5.159m-1.5-1.5 1.409-1.409a2.25 2.25 0 0 1 3.182 0l2.909 2.909m-18 3.75h16.5a1.5 1.5 0 0 0 1.5-1.5V6a1.5 1.5 0 0 0-1.5-1.5H3.75A1.5 1.5 0 0 0 2.25 6v12a1.5 1.5 0 0 0 1.5 1.5Zm10.5-11.25h.008v.008h-.008V8.25Zm.375 0a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0Z" /> </svg> ',
                title: 'Insert image',
                hotkey: 'Mod2-Shift-I',
            },
        ]
    });

    // @ts-expect-error - Added TinyMDE to the window object
    tinyMDE.addEventListener('change', e => { 
        pageContentTextarea.textContent = e.content; 
    });

    // @ts-expect-error - Added TinyMDE to the window object
    tinyMDE.addEventListener("drop", function (event) {
        let formData = new FormData();

        // You can add use event.dataTransfer.items or event.dataTransfer.files
        // to build the form data object:
        for (let i = 0; i < event.dataTransfer.items.length; i++) {
            if (event.dataTransfer.items[i].kind === "file") {
            let file = event.dataTransfer.items[i].getAsFile();
            formData.append("image", file);
            }
        }

        // Call your API endpoint that accepts "Content-Type": "multipart/form-data"
        // requests and responds with the image names and URL-s.
        //
        // Now you can add Markdown images like so:
        // editor.paste(`![${imageName}](${imageUrl})`);
        alert("Image upload coming soon!");
    });
    }

    document.addEventListener('astro:page-load', () => listener());
</script>

<style>
    #edit-page-container {
        height: 100%;
        width: 100%;
        min-width: 100%;
    }

    #edit-page-form {
        display: flex;
        flex-direction: column;
        gap: .75rem;
        padding-top: .5rem;
    }

    .tab-section {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .form-row {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: .75rem;
    }

    @media screen and (max-width: 768px) {
        .form-row {
            grid-template-columns: 1fr;
        }
    }

    .page-content-editor {
        height: 250px;
        margin-bottom: 2rem;

        .editor-container {
            height: 100%;
            overflow: hidden;
            margin-bottom: 1rem;
        }

        #page-content {
            height: 100%;
            width: 100%;
            border: 1px solid hsl(var(--border));
            border-radius: 4px;
            padding: 1rem;
            font-size: 1rem;
            overflow-y: scroll;
        }
    }


</style>