---
import { StudioCMSRoutes } from 'studiocms:lib';
import { Button, Icon } from 'studiocms:ui/components';
---
<header class="page-header">
  <div class="page-title-container">
    <h1 class="page-title" data-link={StudioCMSRoutes.sdk.pages}>Content Management</h1>
  </div>
  <div id="page-actions-container" class="page-actions-container">

    {/* Edit Page Buttons */}
    <Button id="edit-button" variant="solid" color="primary" type="submit" form="edit-page-form">
      <Icon slot="start-content" name="check" width={24} height={24} />
      Save Changes
    </Button>

    {/* Create Page Buttons */}
    <Button id="draft-button" variant="outlined" color="primary" type="submit" form="page-create-form" disabled>
      <Icon slot="start-content" name="document-text" width={24} height={24} />
      Save Draft
    </Button>
    <Button id="publish-button" variant="solid" color="primary" type="submit" form="page-create-form">
      <Icon slot="start-content" name="check" width={24} height={24} />
      Publish
    </Button>
  </div>
</header>

<script>
    async function listener() {
        // get the query parameters
        const urlParams = new URLSearchParams(window.location.search);
  
        // get the elements to customize
        const pageTitle = document.querySelector('.page-title') as HTMLElement;
        const pageEditButton = document.getElementById('edit-button') as HTMLElement;
        const pageSaveDraftButton = document.getElementById('draft-button') as HTMLElement;
        const pageSavePublishButton = document.getElementById('publish-button') as HTMLElement;
        const placeholder = document.getElementById('placeholder-info') as HTMLElement;

        const pageActionsContainer = document.getElementById('page-actions-container') as HTMLElement;
    
        // get the id parameter
        const edit = urlParams.get('edit');
        const create = urlParams.get('create');

        if (edit) {

            const pageDataResponse = await (await fetch(pageTitle.dataset.link!)).json();
            const currentPageData = pageDataResponse.pages.find((page: { data: { id: string; }; }) => page.data.id === edit);

            pageTitle.innerText = `Edit Page: ${currentPageData.data.title}`;
            pageActionsContainer.style.display = 'flex';
            pageEditButton.style.display = 'flex';
            pageSaveDraftButton.style.display = 'none';
            pageSavePublishButton.style.display = 'none';
            placeholder.style.display = 'none';
        } else if (create) {
            pageTitle.innerText = 'Create new Page';
            pageActionsContainer.style.display = 'flex';
            pageEditButton.style.display = 'none';
            pageSaveDraftButton.style.display = 'flex';
            pageSavePublishButton.style.display = 'flex';
            placeholder.style.display = 'none';
        } else {
            pageTitle.innerText = 'Content Management';
            pageActionsContainer.style.display = 'none';
            pageEditButton.style.display = 'none';
            pageSaveDraftButton.style.display = 'none';
            pageSavePublishButton.style.display = 'none';
            placeholder.style.display = 'flex';
        }
    }
  

    document.addEventListener('astro:page-load', listener);
  </script>


<style>
.page-header {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  width: 100%;
}

.page-title-container {
  display: flex;
  flex-direction: column;
  gap: .5rem;
  width: fit-content;
}

.page-title {
  display: block;
  width: fit-content;
  margin: 0;
}

.page-actions-container {
  display: none;
  flex-direction: row;
  align-items: center;
  gap: 1rem;
}

#edit-button,
#draft-button,
#publish-button {
  display: none;
}
</style>
