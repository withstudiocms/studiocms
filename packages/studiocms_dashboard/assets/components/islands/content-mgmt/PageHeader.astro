---
import { StudioCMSRoutes } from 'studiocms:lib';
import { studioCMS_SDK_Cache } from 'studiocms:sdk/cache';
import { Button, Group, Icon } from 'studiocms:ui/components';

interface Props {
	editPage?: boolean;
	createPage?: boolean;
	title?: string;
	editFolder?: boolean;
	createFolder?: boolean;
}

const {
	editPage,
	createPage,
	createFolder,
	editFolder,
	title = 'Content Management',
} = Astro.props;

let pageTitle = title;

const urlParams = Astro.url.searchParams;
const editId = urlParams.get('edit') || '';

if (editId) {
	const res = await studioCMS_SDK_Cache.GET.page.byId(editId);

	if (editPage) {
		pageTitle = `Edit Page: ${res.data.title}`;
	}
}

const folderEdit = urlParams.get('folder') || '';

if (folderEdit) {
	const res = await studioCMS_SDK_Cache.GET.folderList();

	const folder = res.data.find((folder) => folder.id === folderEdit);

	if (editFolder) {
		pageTitle = `Edit Folder: ${folder?.name}`;
	}
}
---
<header class="page-header">
  <div class="page-title-container">
    <h1 class="page-title" data-link={StudioCMSRoutes.sdk.pages}>{pageTitle}</h1>
  </div>
  <div id="page-actions-container" class="page-actions-container">

    { editPage && ( 
      <Button id="edit-button" variant="solid" size="sm"  color="primary" type="submit" form="edit-page-form">
        <Icon slot="start-content" name="check-20-solid" width={20} height={20} />
        Save Changes
      </Button>
    )}

    { editFolder && ( 
      <Button id="edit-button" variant="solid" size="sm"  color="primary" type="submit" form="edit-folder-form">
        <Icon slot="start-content" name="check-20-solid" width={20} height={20} />
        Save Changes
      </Button>
    )}

    { createFolder && ( 
      <Button id="edit-button" variant="solid" size="sm"  color="primary" type="submit" form="create-folder-form">
        <Icon slot="start-content" name="check-20-solid" width={20} height={20} />
        Create
      </Button>
    )}

    {createPage && ( 
      <Group>
      <Button id="draft-button" variant="outlined" size="sm" color="primary" type="submit" form="page-create-form" disabled>
        <Icon slot="start-content" name="document-text-20-solid" width={20} height={20} />
        Save Draft
      </Button>
      <Button id="publish-button" variant="solid" size="sm"  color="primary" type="submit" form="page-create-form">
        <Icon slot="start-content" name="check-20-solid" width={20} height={20} />
        Publish
      </Button>
      </Group>
    )}
  </div>
</header>

<!-- <script>
    async function listener() {
        // get the query parameters
        const urlParams = new URLSearchParams(window.location.search);
  
        // get the elements to customize
        const pageTitle = document.querySelector('.page-title') as HTMLElement;
    
        // get the id parameter
        const edit = window.location.pathname.includes('edit') ? urlParams.get('edit') : null;
        if (edit) {
            const pageDataResponse = await (await fetch(pageTitle.dataset.link!)).json();
            const currentPageData = pageDataResponse.pages.find((page: { data: { id: string; }; }) => page.data.id === edit);

            pageTitle.innerText = `Edit Page: ${currentPageData.data.title}`;
        } 

        const folderEdit = window.location.pathname.includes('edit-folder') ? urlParams.get('folder') : null;

        if (folderEdit) {
            
        }
    }
    document.addEventListener('astro:after-swap', () => listener());
    listener();
  </script> -->


<style>
.page-header {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  width: 100%;
}

.page-title-container {
  display: flex;
  flex-direction: column;
  gap: .5rem;
  width: fit-content;
}

.page-title {
  display: block;
  width: fit-content;
  margin: 0;
}

.page-actions-container {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 1rem;
}
</style>
