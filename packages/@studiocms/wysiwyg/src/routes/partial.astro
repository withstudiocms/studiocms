---
export const partial = true;

import { getRendererComponents } from 'studiocms:component-registry/runtime';

// Import components
const componentRegistry = await getRendererComponents();

type PropData = {
	componentKey: string;
	// biome-ignore lint/suspicious/noExplicitAny: this is a dynamic prop type
	props?: Record<string, any>;
	slot?: string | null;
};

const data: PropData = await Astro.request.json();

if (!data || typeof data.componentKey !== 'string') {
	return new Response(JSON.stringify({ error: 'Missing or invalid componentKey' }), {
		status: 400,
		headers: { 'Content-Type': 'application/json' },
	});
}

const { componentKey, props = {}, slot = null } = data;

const Component = componentRegistry[componentKey];

// Handle case where component doesn't exist
if (!Component) {
	return new Response(JSON.stringify({ error: `Component "${componentKey}" not found` }), {
		status: 404,
		headers: { 'Content-Type': 'application/json' },
	});
}
---
<Component {...props}>
	{slot && <Fragment set:html={slot} />}
</Component>