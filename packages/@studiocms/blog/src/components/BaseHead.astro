---
import '../styles/base.css';
import config from 'studiocms:blog/frontend-config';
import {
	createHead,
	type HeadConfig,
	type HeadConfigSchema,
	type HeadUserConfig,
	headDefaults,
} from 'studiocms:lib';
import type { z } from 'astro/zod';
import { getHeroImage } from './heroHelper.js';

let htmlDefaultHead: HeadUserConfig = [];
let favicon = '';

if (config && typeof config === 'object') {
	if (config.htmlDefaultHead) {
		htmlDefaultHead.push(...config.htmlDefaultHead);
	}
	if (config.favicon) {
		favicon = config.favicon;
	}
}

interface Props {
	title: string;
	description: string;
	lang?: string | undefined;
	image?: string | undefined;
}

const canonicalURL = Astro.url;

const { title, description, lang = 'en', image } = Astro.props;

const ogImage = getHeroImage(image, Astro);

const makeHeader = headDefaults(title, description, lang, Astro, favicon, ogImage, canonicalURL);

const StudioCMSFrontEndHeads: z.input<ReturnType<typeof HeadConfigSchema>> = [
	// Fonts
	{ tag: 'link', attrs: { rel: 'preconnect', href: 'https://fonts.googleapis.com' } },
	{ tag: 'link', attrs: { rel: 'preconnect', href: 'https://fonts.gstatic.com', crossorigin: '' } },
	{
		tag: 'link',
		attrs: {
			href: 'https://fonts.googleapis.com/css2?family=Atkinson+Hyperlegible:wght@400;700&display=swap',
			rel: 'stylesheet',
		},
	},
];

makeHeader.push(...StudioCMSFrontEndHeads);

// TODO: Setup Sitemap integration
// Link to sitemap, but only when `site` is set.
// if (Astro.site) {
// 	makeHeader.push({
// 		tag: 'link',
// 		attrs: {
// 			rel: 'sitemap',
// 			href: fileWithBase('/sitemap-index.xml'),
// 		},
// 	});
// }

const head = createHead(makeHeader, htmlDefaultHead as HeadConfig);
---

{head.map(({ tag: Tag, attrs, content }) => <Tag {...attrs} set:html={content} />)}