---
import { authEnvCheck } from 'studiocms:auth/utils/authEnvCheck';
import { AuthConfig } from 'studiocms:config';
import { useTranslations } from 'studiocms:i18n';
import { StudioCMSRoutes } from 'studiocms:lib';
import { Button, Input } from '@studiocms/ui/components';
import AuthLayout from '../layouts/AuthLayout.astro';

const lang = 'en-us';
const t = useTranslations(lang, '@studiocms/auth:signup');

const {
	providers,
	providers: {
		usernameAndPassword,
		usernameAndPasswordConfig: { allowUserRegistration },
	},
} = AuthConfig;

const { SHOW_OAUTH } = await authEnvCheck(providers);

let paragraph: string;

if (usernameAndPassword && SHOW_OAUTH) {
	paragraph = t('sub-header-usernamepasswordoauth');
} else if (usernameAndPassword && !SHOW_OAUTH) {
	paragraph = t('sub-header-usernamepassword');
} else if (!usernameAndPassword && SHOW_OAUTH) {
	paragraph = t('sub-header-oauth');
} else {
	paragraph = t('sub-header-noprovider');
}
---
<AuthLayout 
    title={t('title')} 
    description={t('description')} 
    lang={lang} 
    checkLogin
    >
    
    <div slot="header" class="form-header">
        <h1>{t('header')}</h1>
        <p>{paragraph}</p>
    </div>

    { usernameAndPassword && (
        <form class="form" id="sign-up-form" method="post" action={StudioCMSRoutes.authLinks.registerAPI}>

            <Input label={t('username-label')} name="username" type="text" />
            <Input label={t('email-label')} name="email" type="email" />
            <Input label={t('displayname-label')} name="displayname" type="text" />
            <Input label={t('password-label')} name="password" type="password" />
            <Input label={t('confirm-password-label')} name="confirm-password" type="password" />

            <Button fullWidth type="submit" as="button" type="submit" color='primary' variant='solid'>{t('create-account-button')}</Button>
        </form>
    )}

    { allowUserRegistration && (
        <p slot="footer">{t('allow-login-haveaccount')} <a href={StudioCMSRoutes.authLinks.loginURL}>{t('allow-login-login')}</a></p>
    )}

</AuthLayout>

<script>
    import { formListener } from 'studiocms:auth/scripts/formListener';
    const signUpForm = document.getElementById('sign-up-form') as HTMLFormElement;

    signUpForm.addEventListener('submit', async (event) => formListener(event, signUpForm, 'register'));
</script>
