import DTSBuilder from '@matthiesenxyz/astrodtsbuilder';
import { createResolver } from 'astro-integration-kit';

const { resolve } = createResolver(import.meta.url);

const dtsFile = DTSBuilder();

dtsFile.addSingleLineNote(
	'This file is generated by StudioCMS and should not be modified manually.'
);

dtsFile.addModule('studiocms:lib', {
	namedExports: [
		{
			name: 'HeadConfigSchema',
			typeDef: `typeof import('${resolve('../lib/head.ts')}').HeadConfigSchema`,
		},
		{
			name: 'createHead',
			typeDef: `typeof import('${resolve('../lib/head.ts')}').createHead`,
		},
		{
			name: 'headDefaults',
			typeDef: `typeof import('${resolve('../lib/headDefaults.ts')}').headDefaults`,
		},
		{
			name: 'stringify',
			typeDef: `typeof import('${resolve('../lib/jsonUtils.ts')}').stringify`,
		},
		{
			name: 'stringifyMap',
			typeDef: `typeof import('${resolve('../lib/jsonUtils.ts')}').stringifyMap`,
		},
		{
			name: 'pathWithBase',
			typeDef: `typeof import('${resolve('../lib/pathGenerators.ts')}').pathWithBase`,
		},
		{
			name: 'fileWithBase',
			typeDef: `typeof import('${resolve('../lib/pathGenerators.ts')}').fileWithBase`,
		},
		{
			name: 'ensureLeadingSlash',
			typeDef: `typeof import('${resolve('../lib/pathGenerators.ts')}').ensureLeadingSlash`,
		},
		{
			name: 'ensureTrailingSlash',
			typeDef: `typeof import('${resolve('../lib/pathGenerators.ts')}').ensureTrailingSlash`,
		},
		{
			name: 'ensureLeadingSlashAndTrailingSlash',
			typeDef: `typeof import('${resolve('../lib/pathGenerators.ts')}').ensureLeadingSlashAndTrailingSlash`,
		},
		{
			name: 'stripLeadingSlash',
			typeDef: `typeof import('${resolve('../lib/pathGenerators.ts')}').stripLeadingSlash`,
		},
		{
			name: 'stripTrailingSlash',
			typeDef: `typeof import('${resolve('../lib/pathGenerators.ts')}').stripTrailingSlash`,
		},
		{
			name: 'stripLeadingSlashAndTrailingSlash',
			typeDef: `typeof import('${resolve('../lib/pathGenerators.ts')}').stripLeadingSlashAndTrailingSlash`,
		},
		{
			name: 'stripHtmlExtension',
			typeDef: `typeof import('${resolve('../lib/pathGenerators.ts')}').stripHtmlExtension`,
		},
		{
			name: 'ensureHtmlExtension',
			typeDef: `typeof import('${resolve('../lib/pathGenerators.ts')}').ensureHtmlExtension`,
		},
		{
			name: 'removeLeadingTrailingSlashes',
			typeDef: `typeof import('${resolve('../lib/removeLeadingTrailingSlashes.ts')}').removeLeadingTrailingSlashes`,
		},
		{
			name: 'getSluggedRoute',
			typeDef: `typeof import('${resolve('../lib/routeMap.ts')}').getSluggedRoute`,
		},
		{
			name: 'getEditRoute',
			typeDef: `typeof import('${resolve('../lib/routeMap.ts')}').getEditRoute`,
		},
		{
			name: 'getDeleteRoute',
			typeDef: `typeof import('${resolve('../lib/routeMap.ts')}').getDeleteRoute`,
		},
		{
			name: 'makeNonDashboardRoute',
			typeDef: `typeof import('${resolve('../lib/routeMap.ts')}').makeNonDashboardRoute`,
		},
		{
			name: 'makeDashboardRoute',
			typeDef: `typeof import('${resolve('../lib/routeMap.ts')}').makeDashboardRoute`,
		},
		{
			name: 'StudioCMSRoutes',
			typeDef: `typeof import('${resolve('../lib/routeMap.ts')}').StudioCMSRoutes`,
		},
		{
			name: 'sideBarLinkMap',
			typeDef: `typeof import('${resolve('../lib/routeMap.ts')}').sideBarLinkMap`,
		},
		{
			name: 'urlGenFactory',
			typeDef: `typeof import('${resolve('../lib/urlGen.ts')}').urlGenFactory`,
		},
	],
	typeExports: [
		{
			name: 'HeadConfig',
			typeDef: `import('${resolve('../lib/head.ts')}').HeadConfig`,
		},
		{
			name: 'HeadUserConfig',
			typeDef: `import('${resolve('../lib/head.ts')}').HeadUserConfig`,
		},
	],
});

export const libDtsFileOutput = dtsFile.makeAstroInjectedType('lib.d.ts');

export default libDtsFileOutput;
