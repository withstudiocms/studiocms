---
import { StudioCMSRoutes } from 'studiocms:lib';
import studioCMS_SDK from 'studiocms:sdk';
import { Button, Card, Icon, Input } from 'studiocms:ui/components';
import Layout from '../components/Layout.astro';

const lang = 'en-us';

const urlSearchParams = Astro.url.searchParams;

const token = urlSearchParams.get('token');
const id = urlSearchParams.get('id');
const userId = urlSearchParams.get('userid') ?? '';

if (!token || !id || !userId) {
	return new Response(null, { status: 404 });
}

const user = await studioCMS_SDK.GET.databaseEntry.users.byId(userId);

if (!user) {
	return new Response(null, { status: 404 });
}

const lookupToken = await studioCMS_SDK.resetTokenBucket.check(token);

if (!lookupToken) {
	return new Response(null, { status: 404 });
}
---

<Layout 
  title="Password Reset"
  requiredPermission={'visitor'}
  sidebar={false}
  {lang}
  >

  <Card class="reset-form" fullWidth as="form" id="reset-password-form" action={StudioCMSRoutes.endpointLinks.resetPassword}>
    <div slot="header">
        <h2>Password Reset</h2>
        <p>
            Hello, {user?.name || 'User'}. <br />
            Please enter your new password below.
        </p>
    </div>

    <div class="password-reset-form-body">

        <input type="hidden" name="token" value={token} />
        <input type="hidden" name="id" value={id} />
        <input type="hidden" name="userid" value={userId} />

        <Input 
            label='New Password' 
            type='password'
            placeholder='********' 
            isRequired 
            autocomplete='password new_password'
            name='new-password' 
            />
    
        <Input 
            label='Confirm New Password' 
            type='password'
            placeholder='********' 
            isRequired 
            autocomplete='password new_password'
            name='confirm-new-password' 
            />
    </div>

    <div slot="footer">
        <div class="form-footer">
            <Button type='submit' size='sm' variant={'solid'} color='primary'>
                <Icon slot="start-content" name="check" width={24} height={24} />
                Reset Password
            </Button>
        </div>
    </div>

  </Card>

  <script>
    import { toast } from "studiocms:ui/components";

    const resetForm = document.getElementById('reset-password-form') as HTMLFormElement;

resetForm.addEventListener('submit', async (e) => {
    e.preventDefault();

    const formData = new FormData(resetForm);

    const data = {
        token: formData.get('token') as string,
        id: formData.get('id') as string,
        userid: formData.get('userid') as string,
        password: formData.get('new-password') as string,
        confirm_password: formData.get('confirm-new-password') as string,
    }

    const response = await fetch(resetForm.action, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(data)
    })

    const res = await response.json();

    if (response.status !== 200) {
        toast({
            title: 'Error',
            description: res.error,
            type: 'danger'
        })
    }

    if (response.status === 200) {
        toast({
            title: 'Success',
            description: res.message,
            type: 'success'
        })
    }
});
  </script>

  <style>
    .reset-form {
        max-width: 600px;
        margin: 0 auto;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);

        & h2 {
            margin: 0;
            padding: 1rem;
            font-size: 1.5rem;
            font-weight: 500;
            color: hsl(var(--text-base));
        }

        & p {
            margin: 0;
            padding: 1rem;
            font-size: 1rem;
            color: hsl(var(--text-muted));
        }

        & .password-reset-form-body {
            display: flex;
            flex-direction: column;
            gap: 1rem;
            padding: 1rem;
        }

        & .form-footer {
            display: flex;
            justify-content: flex-end;
            padding: 1rem;
        }
    }
  </style>

</Layout>
