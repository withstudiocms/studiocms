import DTSBuilder from '@matthiesenxyz/astrodtsbuilder';
import { createResolver } from 'astro-integration-kit';

const { resolve } = createResolver(import.meta.url);

export function getProxyDTS(
	ComponentRegistry: Record<string, string>,
	astroConfigResolve: (...path: Array<string>) => string
) {
	const dtsFile = DTSBuilder();

	dtsFile.addSingleLineNote(
		'This file is generated by StudioCMS and should not be modified manually.'
	);

	dtsFile.addModule('studiocms:component-proxy', {
		namedExports: [
			{
				name: 'createComponentProxy',
				typeDef: `typeof import('${resolve('../runtime/AstroComponentProxy.js')}').createComponentProxy`,
			},
			{
				name: 'dedent',
				typeDef: `typeof import('${resolve('../runtime/AstroComponentProxy.js')}').dedent`,
			},
			{
				name: 'transformHTML',
				typeDef: `typeof import('${resolve('../runtime/AstroComponentProxy.js')}').transformHTML`,
			},
			{
				name: 'componentKeys',
				typeDef: 'string[]',
			},
			...(ComponentRegistry
				? Object.keys(ComponentRegistry).map((key) => ({
						name: key,
						typeDef: `typeof import('${astroConfigResolve(ComponentRegistry[key])}').default`,
					}))
				: []),
		],
	});

	const proxyDtsFileOutput = dtsFile.makeAstroInjectedType('proxy.d.ts');

	return proxyDtsFileOutput;
}

export default getProxyDTS;
