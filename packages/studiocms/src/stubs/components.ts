import DTSBuilder from '@matthiesenxyz/astrodtsbuilder';
import { createResolver } from 'astro-integration-kit';

const { resolve } = createResolver(import.meta.url);

const dtsFile = DTSBuilder();

dtsFile.addSingleLineNote(
	'This file is generated by StudioCMS and should not be modified manually.'
);

dtsFile.addModule('studiocms:components', {
	namedExports: [
		{
			name: 'Avatar',
			multiLineDescription: [
				'# Avatar Component used for the Navigation Component',
				'',
				'This component has no props and will render the current user avatar or a default avatar if no user is logged in based on the Astro.locals object',
			],
			typeDef: `typeof import('${resolve('../components/Avatar.astro')}').default`,
		},
		{
			name: 'FormattedDate',
			multiLineDescription: [
				'# Formatted Date Component used for rendering dates in a human readable format',
				'',
				"This components locale will adapt to the current configuration of the StudioCMS 'dateLocale' settings configuration option.",
				'',
				'@props {string(Date)} date - Date String',
			],
			typeDef: `typeof import('${resolve('../components/FormattedDate.astro')}').default`,
		},
		{
			name: 'GenericHeader',
			multiLineDescription: [
				'# Generic Header Component <GenericHeader />',
				'',
				'Generic Header Component used for rendering a generic header with a title and description from StudioCMS',
			],
			typeDef: `typeof import('${resolve('../components/GenericHeader.astro')}').default`,
		},
		{
			name: 'Navigation',
			multiLineDescription: [
				'# Navigation Component used for rendering StudioCMS User Facing Navigation',
				'',
				'This component is a helper component that will render the StudioCMS user facing navigation to assist in easy navigation of your built front-end site',
				'',
				'@props {topLevelLinkCount} number - Number of top level links to display before collapsing into a dropdown',
				'@props {hideAvatar} boolean - Hide the user avatar/Login button in the navigation bar',
			],
			typeDef: `typeof import('${resolve('../components/Navigation.astro')}').default`,
		},
		{
			name: 'Generator',
			typeDef: `typeof import('${resolve('../components/Generator.astro')}').default`,
			multiLineDescription: [
				'Component used for the generator meta tag',
				'',
				'Useful for providing the current version of the StudioCMS package in the meta tags of your site',
			],
		},
	],
});

export const componentsDtsFileOutput = dtsFile.makeAstroInjectedType('components.d.ts');

export default componentsDtsFileOutput;
