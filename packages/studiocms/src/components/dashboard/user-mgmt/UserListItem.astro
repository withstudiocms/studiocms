---
import { getLabelForPermissionLevel } from 'studiocms:auth/utils/getLabelForPermissionLevel';
import { Divider, Icon, User } from 'studiocms:ui/components';

// TODO Refactor this component to not use inline script

interface Props {
	user: {
		id: string;
		name: string;
		email: string | null;
		avatar: string | null;
		username: string;
		permissionsData:
			| {
					user: string;
					rank: string;
			  }
			| undefined;
	};
	searchQuery?: string;
}

const { user, searchQuery } = Astro.props;
---
<a class="sidebar-user" href={`${Astro.locals.StudioCMS.routeMap.mainLinks.userManagementEdit}/?user=${user.id}${searchQuery ? `&search=${searchQuery}` : ''}`} data-astro-reload>
    <User 
        name={user.name}
        avatar={user.avatar ?? undefined} 
        description={getLabelForPermissionLevel(user.permissionsData?.rank!)} 
        loading='eager',
        />
    <Icon name="chevron-right" width={24} height={24} />
</a>
<Divider background={'background-step-1'}></Divider>

<script is:inline data-astro-rerun>
    function setUserLinks() {
        const userLinks = document.querySelectorAll('.sidebar-user');
        
        const setActive = (target) => {
            userLinks.forEach((el) => {
                el.classList.remove('active');
            });
            target.classList.add('active');
        };
        const CurrentQueryParams = new URL(window.location.href).searchParams.get('user');

        userLinks.forEach((target) => {
            const LinkQueryParams = new URL(target.href).searchParams.get('user');

            if (LinkQueryParams === CurrentQueryParams) {
                setActive(target);
            }

        })
    }

    document.addEventListener('astro:page-load', setUserLinks);
    setUserLinks();
</script>
