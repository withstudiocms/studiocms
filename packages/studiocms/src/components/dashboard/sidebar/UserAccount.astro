---
import type { UserSessionData } from 'studiocms:auth/lib/types';
import { getLabelForPermissionLevel } from 'studiocms:auth/utils/getLabelForPermissionLevel';
import { User } from 'studiocms:ui/components/user';

interface Props {
	currentUser: UserSessionData | null;
}

const { currentUser } = Astro.props as Props;

// biome-ignore lint/suspicious/noExplicitAny: This is a valid use case for explicit any.
type PropsOf<T extends (...args: any[]) => any> = Parameters<T>[0];

type UserProps = PropsOf<typeof User>;

const userProps: UserProps = {
	name: currentUser?.user?.name || 'Visitor',
	description: getLabelForPermissionLevel(currentUser?.permissionLevel || 'Visitor'),
	loading: 'eager',
};

if (currentUser?.user?.avatar) {
	userProps.avatar = currentUser.user.avatar;
}
---
<User {...userProps} />