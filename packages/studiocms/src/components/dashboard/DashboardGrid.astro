---
import type { UserSessionData } from 'studiocms:auth/lib/types';
import { verifyUserPermissionLevel } from 'studiocms:auth/lib/user';
import dashboardGridItems from 'studiocms:components/dashboard-grid-items';
import type { UiLanguageKeys } from 'studiocms:i18n';
import { type SiteConfigCacheObject } from 'studiocms:sdk/cache';
import { Center } from 'studiocms:ui/components';
import DashboardGridItem from './DashboardGridItem.astro';

interface Props {
	lang: UiLanguageKeys;
	config: SiteConfigCacheObject;
	currentUser: UserSessionData;
}

const {
	lang,
	config: { data },
	currentUser,
} = Astro.props as Props;

let gridItems = dashboardGridItems;

if ((data.gridItems as string[]) ?? [].length > 0) {
	gridItems = dashboardGridItems.filter((item) =>
		((data.gridItems as string[]) ?? []).includes(item.name)
	);
}
---
<div class="dashboard-grid-container">

    { 
		gridItems.length > 0 
		? gridItems.map(async (item) => {
			if (item.requiresPermission) {
				const allowed = await verifyUserPermissionLevel(currentUser, item.requiresPermission);
				if (allowed) {
					return <DashboardGridItem {...item} {lang} />
				}
			} else {
				return <DashboardGridItem {...item} {lang} />
			}
		}) 
		: <Center><p>There is nothing to display</p></Center> 
	}

</div>