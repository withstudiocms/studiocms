---
import type { UserSessionData } from 'studiocms:auth/lib/types';
import { FormattedDate } from 'studiocms:components';
import studioCMS_SDK from 'studiocms:sdk';
import { Button, Card, Center, Icon } from 'studiocms:ui/components';

interface Props {
	userSession: UserSessionData;
}

const { userSession } = Astro.props;

const { user } = userSession;

if (!user) {
	throw new Error('User not found');
}

const userTokens = await studioCMS_SDK.REST_API.tokens.get(user.id);
---
<Card fullWidth class="api-tokens">
    <div slot="header">
        <h2>API Tokens</h2>
    
        <div class="form-header">
            <Button 
                type='submit' 
                id="create-api-token"
                variant='solid' 
                color='primary'
                size='sm'
                >
                <Icon slot="start-content" name="plus" width={24} height={24} />
                Create API Token
            </Button> 
        </div>
    </div>
    <div class="api-tokens-content">
        <p class="description">API tokens are used to authenticate with the StudioCMS REST API.</p>

        { userTokens.length > 0 ? userTokens.map((token) => (
            <Card fullWidth class="token-list-item" variant={'filled'}>
                <div slot="header" class="token-list-item-header">
                    <div class="token-list-item-header-row">
                        <h4>
                            <Icon name="key" width={24} height={24} />
                            {token.description}
                        </h4>
                        <Button type="submit" variant="solid" color="danger" size="sm" data-token={token.id} data-user={user.id}>
                            <Icon slot="start-content" name="trash" width={24} height={24} />
                            Delete
                        </Button>
                    </div>
                </div>

                <div class="token-list-item-content">
                    <div class="token-list-item-content-row">
                        <span class="created-at">Created - <FormattedDate date={token.creationDate} /></span>
                    </div>
                </div>
            </Card>
        )) : (
            <Card fullWidth class="token-list-item">
                <Center>
                    <p class="description">No API tokens found.</p>
                </Center>
            </Card>
        ) }
    </div>
    
</Card>

<script>
    const deleteButtons = document.querySelectorAll('[data-token]') as NodeListOf<HTMLButtonElement>;

    deleteButtons.forEach((button) => {
        button.addEventListener('click', async (event) => {
            event.preventDefault();
            const tokenID = button.getAttribute('data-token');
            const userID = button.getAttribute('data-user');

            if (!tokenID) {
                return;
            }

            if (!userID) {
                return;
            }

            console.log('Deleting token', tokenID);
        });
    });
</script>

<style>
    .api-tokens {
        position: relative;
    }

    .form-header {
        display: block;
        position: absolute;
        top: 1rem;
        right: 1rem;
    }

    .api-tokens-content {
        display: flex;
        flex-direction: column;
        gap: .5rem;

        .description {
            color: hsl(var(--text-muted));
        }

        .token-list-item {
            display: flex;
            flex-direction: column;
            background-color: hsl(var(--background-step-2));

            .token-list-item-header {
                display: flex;
                flex-direction: column;

                .token-list-item-header-row {
                    display: flex;
                    justify-content: space-between;
                    align-items: center;

                    h4 {
                        display: flex;
                        align-items: center;
                        gap: 0.5rem;
                    }
                }
            }

            .token-list-item-content {
                display: flex;
                flex-direction: column;

                .token-list-item-content-row {
                    display: flex;
                    justify-content: space-between;
                    align-items: center;

                    .created-at {
                        font-size: 0.75rem;
                        color: hsl(var(--text-muted));
                    }
                }
            }
        }
    }
</style>