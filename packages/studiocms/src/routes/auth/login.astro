---
import { authEnvCheck } from 'studiocms:auth/utils/authEnvCheck';
import { AuthConfig } from 'studiocms:config';
import { useTranslations } from 'studiocms:i18n';
import { StudioCMSRoutes } from 'studiocms:lib';
import { Button, Input } from 'studiocms:ui/components';
import AuthLayout from '../../layouts/auth/AuthLayout.astro';

const lang = 'en-us';
const t = useTranslations(lang, '@studiocms/auth:login');

const {
	providers,
	providers: {
		usernameAndPassword,
		usernameAndPasswordConfig: { allowUserRegistration },
	},
} = AuthConfig;

const { SHOW_OAUTH } = await authEnvCheck(providers);

let paragraph:
	| 'sub-header-usernamepasswordoauth'
	| 'sub-header-usernamepassword'
	| 'sub-header-oauth'
	| 'sub-header-noprovider';

if (usernameAndPassword && SHOW_OAUTH) {
	paragraph = 'sub-header-usernamepasswordoauth';
} else if (usernameAndPassword && !SHOW_OAUTH) {
	paragraph = 'sub-header-usernamepassword';
} else if (!usernameAndPassword && SHOW_OAUTH) {
	paragraph = 'sub-header-oauth';
} else {
	paragraph = 'sub-header-noprovider';
}
---
<AuthLayout 
    title={t('title')} 
    description={t('description')} 
    {lang}
    checkLogin
    >

    <div slot="header" class="form-header">
        <h1>
            <translation-key key="header">{t('header')}</translation-key>
        </h1>
        <p>
            <translation-key key={paragraph}>{t(paragraph)}</translation-key>
        </p>
    </div>

    { usernameAndPassword && (
        <form class="form" id="login-form" method="post" action={StudioCMSRoutes.authLinks.loginAPI}>

            <Input label={t('username-label')} name="username" type="text" />
            <Input label={t('password-label')} name="password" type='password' />

            <Button fullWidth as="button" type="submit" color='primary' size='md' variant='solid'>
                <translation-key key="login-button">{t('login-button')}</translation-key>
            </Button>
        </form>
    )}

    { allowUserRegistration && (
        <p slot="footer">
            <translation-key key="allow-registration-noaccount">
                {t('allow-registration-noaccount')}
            </translation-key> 
            <a href={StudioCMSRoutes.authLinks.signupURL}>
                <translation-key key="allow-registration-register">
                    {t('allow-registration-register')}
                </translation-key>
            </a>
        </p>
    )}

</AuthLayout>

<script>
    import { 
        $i18n,
        $localeSettings,
        baseTranslation,
        defaultLang,
        documentUpdater,
        makeTranslation,
        updateElmLabel,
    } from 'studiocms:i18n/client';

    const currentPage = '@studiocms/auth:login';

    let lang = defaultLang;

    const i18n = $i18n(currentPage, baseTranslation[currentPage]);

    $localeSettings.subscribe((locale) => {
        lang = locale || defaultLang;
    });
    
    i18n.subscribe(comp => {
        documentUpdater(comp, lang)
        updateElmLabel('username', comp['username-label']);
        updateElmLabel('password', comp['password-label']);
    });

    if (!customElements.get('translation-key')) {
        customElements.define('translation-key', makeTranslation(currentPage, i18n));
    }
</script>

<script>
    import { formListener } from '../../scripts/formListener.js';
    const loginForm = document.getElementById('login-form') as HTMLFormElement;

    loginForm.addEventListener('submit', (event) => formListener(event, loginForm, 'login'));
</script>
