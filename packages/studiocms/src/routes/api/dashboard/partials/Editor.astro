---
export const partial = true;
import pluginsList from "studiocms:plugins";

type RawJsonData = {
	content: string | undefined;
	editor: string;
};

type EditorComponent = (_props?: {
	content?: string | null | undefined;
// biome-ignore lint/suspicious/noExplicitAny: <explanation>
}) => any;

type EditorComponentItem = {
	identifier: string;
	Component: EditorComponent;
};

async function load() {
	const jsonData: RawJsonData | undefined = await Astro.request.json();

	const pageTypeComponents: EditorComponentItem[] = [];

	for (const { pageTypes } of pluginsList) {
		if (!pageTypes) continue;

		for (const { identifier, pageContentComponent } of pageTypes) {
			if (!pageContentComponent) continue;

			pageTypeComponents.push({
				identifier,
				Component: (
					await import(/* @vite-ignore */ pageContentComponent)
				).default,
			});
		}
	}

	let Editor: EditorComponentItem | undefined;

	Editor = pageTypeComponents.find((ed) => {
		if (ed.identifier === jsonData?.editor) {
			return ed;
		}
	});

	if (!Editor) {
		// biome-ignore lint/style/noNonNullAssertion: <explanation>
		Editor = pageTypeComponents.find(
			(editor) => editor.identifier === "studiocms/markdown",
		)!;
	}

	if (jsonData?.content) {
		return {
			content: jsonData.content,
			ActiveEditor: Editor.Component,
		};
	}

	return {
		content: "No content to display",
		ActiveEditor: Editor.Component,
	};
}

const { content, ActiveEditor } = await load();
---

<ActiveEditor content={content} />
