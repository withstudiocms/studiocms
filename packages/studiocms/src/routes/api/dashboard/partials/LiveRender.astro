---
export const partial = true;

import { pipe } from '../../../../effect.js';
import { parseMarkdown } from '../../../../utils/tinyMDParser.js';

type FullJsonData = { content: string | undefined };

const html = pipe(
	{
		queryParam: Astro.url.searchParams.get('content'),
		preQuery: Astro.url.searchParams.get('preload-content'),
		astroJsonData: (await Astro.request.json()) as FullJsonData,
	},
	(data) => {
		const { queryParam, preQuery, astroJsonData } = data;
		if (astroJsonData?.content) {
			return astroJsonData.content;
		}
		if (queryParam && queryParam !== 'null') {
			return queryParam;
		}
		if (preQuery && preQuery !== 'null') {
			return preQuery;
		}
		return 'No content to display';
	},
	(content) => parseMarkdown(content)
);
---
<Fragment set:html={html} />
