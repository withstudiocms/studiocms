---
export const partial = true;

import { pipe } from '../../../../effect.js';
import { parseMarkdown } from '../../../../utils/tinyMDParser.js';

type FullJsonData = { content: string | undefined };

const queryParam = Astro.url.searchParams.get('content');
const preQuery = Astro.url.searchParams.get('preload-content');
const astroJsonData = await Astro.request.json();

const renderedMarkdown = pipe(
	() => {
		const jsonData: FullJsonData | undefined = astroJsonData;

		if (jsonData?.content) {
			return jsonData.content;
		}

		if (queryParam && queryParam !== 'null') {
			return queryParam;
		}

		if (preQuery && preQuery !== 'null') {
			return preQuery;
		}

		return 'No content to display';
	},
	(content) => parseMarkdown(content())
);
---
<Fragment set:html={renderedMarkdown} />
