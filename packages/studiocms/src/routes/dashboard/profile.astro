---
import { AuthConfig } from 'studiocms:config';
import { useTranslations } from 'studiocms:i18n';
import PageHeader from '../../components/dashboard/PageHeader.astro';
import APITokens from '../../components/dashboard/profile/APITokens.astro';
import BasicInfo from '../../components/dashboard/profile/BasicInfo.astro';
import Notifications from '../../components/dashboard/profile/Notifications.astro';
import SocialSignin from '../../components/dashboard/profile/SocialSignin.astro';
import UpdatePassword from '../../components/dashboard/profile/UpdatePassword.astro';
import { providerData, showOAuth } from '../../components/dashboard/profile/oAuthButtonProviders';
import Layout from '../../layouts/dashboard/Layout.astro';

const lang = Astro.locals.defaultLang;
const t = useTranslations(lang, '@studiocms/dashboard:profile');

const { siteConfig: config, userSessionData: currentUser } = Astro.locals;

const {
	providers: { usernameAndPassword },
} = AuthConfig;

const shouldShowOAuth = showOAuth && providerData.some(({ enabled }) => enabled);

const isAllowedAPITokens = Astro.locals.userPermissionLevel.isEditor;
---

<Layout 
  title={t('title')}
  description={t('description')}
  requiredPermission="visitor"
  {lang}
  {config}
  {currentUser}
  >

  <div slot="header">
    <PageHeader title={t('header')} />
  </div>

  <div class="page-content">

    <BasicInfo {currentUser} />

    <Notifications {currentUser} {config} />

    { usernameAndPassword && <UpdatePassword {currentUser} /> }

    { shouldShowOAuth && <SocialSignin {currentUser} /> }

    { isAllowedAPITokens && <APITokens userSession={currentUser} /> }

  </div>
</Layout>

<script>
    import { 
        $i18n,
        $localeSettings,
        baseTranslation,
        defaultLang,
        documentUpdater,
        pageHeaderUpdater,
    } from 'studiocms:i18n/client';

    const currentPage = '@studiocms/dashboard:profile';

    let lang = defaultLang;

    const i18n = $i18n(currentPage, baseTranslation[currentPage]);

    $localeSettings.subscribe((locale) => {
        lang = locale || defaultLang;
    });
    
    i18n.subscribe(comp => {
      documentUpdater(comp, lang)
      pageHeaderUpdater(comp.header)
    });
</script>


<style>
  .page-content {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
</style>