---
import { Card, TabItem, Tabs } from 'studiocms:ui/components';
import { CoreWebVitals } from '../../consts.js';
import SummaryCard from '../../dashboard-grid-items/SummaryCard.astro';
import { getWebVitals } from '../../webVital.js';

const webVitals = await getWebVitals();

const twentyFourHourSummary = CoreWebVitals.map((metric) => ({
	metric,
	summary: webVitals.twentyFourHours.summary[metric],
}));

const sevenDaySummary = CoreWebVitals.map((metric) => ({
	metric,
	summary: webVitals.sevenDays.summary[metric],
}));

const thirtyDaySummary = CoreWebVitals.map((metric) => ({
	metric,
	summary: webVitals.thirtyDays.summary[metric],
}));

const summaries = CoreWebVitals.map((metric) => ({
	metric,
	summary: webVitals.summary[metric],
}));

const { routeSummary } = webVitals;

const ratingText = {
	good: 'Good',
	'needs-improvement': 'Needs Improvement',
	poor: 'Poor',
};
---
<div class="analytics-container">

    <Tabs variant='starlight'>
        <TabItem label="Core Web Vitals">
            <div class="flex-column">
                <Card fullWidth>
                    <div slot="header"><span>Core Web Vitals Summaries</span></div>
                    <div class="flex-wrap">
                        {summaries.map(({ metric, summary }) => (
                            <SummaryCard {metric} {summary} />
                        ))}
                    </div>
                </Card>
            
                <Card fullWidth>
                    <div slot="header"><span>Core Web Vitals by Route</span></div>
                    <div>
                        <table>
                            <thead>
                                <tr>
                                    <th>Route</th> <th>LCP</th> <th>INP</th> <th>CLS</th>
                                </tr>
                            </thead>
                            <tbody>
                                {routeSummary.map(({ route, metrics }) => (
                                    <tr>
                                        <td>{route}</td>
                                        <td><span class:list={[metrics.LCP.rating]}>{ratingText[metrics.LCP.rating]}</span></td>
                                        <td><span class:list={[metrics.INP.rating]}>{ratingText[metrics.INP.rating]}</span></td>
                                        <td><span class:list={[metrics.CLS.rating]}>{ratingText[metrics.CLS.rating]}</span></td>
                                    </tr>
                                ))}
                            </tbody>
                        </table>
                    </div>
                </Card>
            </div>
        </TabItem>
    </Tabs>

</div>

<style>
    .analytics-container {
        padding-left: 1rem;
        padding-right: 1rem;
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .flex-wrap {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: .5rem;
        margin-bottom: 1rem;
    }

    .flex-column {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    table {
        width: 100%;
        border-collapse: collapse;
    }

    th {
        text-align: left;
        padding: .5rem;
        border-bottom: 1px solid hsl(var(--border));
    }

    td {
        padding: .5rem;
        border-bottom: 1px solid hsl(var(--border));
        background-color: inherit;

        span {
            background-color: inherit;
        }
    }

    span.good {
        color: hsl(var(--success-base));
    }

    span.needs-improvement {
        color: hsl(var(--warning-base)); 
    }

    span.poor {
        color: hsl(var(--danger-base));
    }

    tr {
        border-bottom: 1px solid hsl(var(--border));
    }


    tr:last-child {
        border-bottom: none;
    }

    tbody tr:nth-child(odd) {
        background-color: hsl(var(--background-base));
    }

    tbody tr:nth-child(even) {
        background-color: hsl(var(--background-step-1));
    }


</style>