/**
 * This file is responsible for managing translation files.
 *
 * It provides utilities to work with translation keys and their corresponding
 * file paths.
 *
 * Note: The exported function is imported and used by the main index of the integration,
 * to generate the list of available translation keys and inject them into a server/client
 * friendly Vite virtual module.
 */

import { glob } from 'tinyglobby';

/**
 * Asynchronously retrieves a list of available translation JSON files from the
 * `translations` directory relative to the current module.
 *
 * @remarks
 * Uses the `glob` function to match all `.json` files recursively within the
 * `translations` directory. The directory path is resolved using `import.meta.url`.
 *
 * @example
 * // Example result:
 * // ['en.json', 'fr.json', 'nested/de.json']
 *
 * @returns {Promise<string[]>} A promise that resolves to an array of relative file paths
 * of translation files.
 */
const availableTranslationFiles = await glob('**/*.json', {
	cwd: new URL('./translations/', import.meta.url).pathname,
});

/**
 * An array of translation file keys derived from `availableTranslationFiles`.
 * Each key is generated by removing the `.json` extension from the file name.
 * Falsy values are filtered out from the resulting array.
 *
 * @example
 * // If availableTranslationFiles = ['en.json', 'fr.json']
 * // availableTranslationFileKeys = ['en', 'fr']
 */
export const availableTranslationFileKeys = availableTranslationFiles
	.map((file) => file.replace('.json', ''))
	.filter(Boolean);
