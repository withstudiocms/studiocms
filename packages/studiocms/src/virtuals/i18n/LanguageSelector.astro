---
import { Button } from 'studiocms:ui/components/button';
import { Dropdown } from 'studiocms:ui/components/dropdown';
import { Icon } from 'studiocms:ui/components/icon';
import type { ComponentProps } from 'astro/types';
import { languageSelectorOptions } from './config.js';

type DropdownProps = ComponentProps<typeof Dropdown>;

const languageOptions = languageSelectorOptions.map((option) => ({
	label: option.value,
	value: option.key,
	icon: `lang-flags:${option.flag}`,
})) as DropdownProps['options'];
---
<Dropdown
  id='language-selector'
  options={languageOptions}
  align='start'
>
  <Button variant='outlined' size='sm'>
    <Icon name='heroicons:language' width={16} height={16} />
  </Button>
</Dropdown>

<script>
  import { DropdownHelper } from 'studiocms:ui/components/dropdown';
  import { $localeSettings, defaultLang } from "studiocms:i18n/client";

  const languageSelector = new DropdownHelper('language-selector');

  languageSelector.registerClickCallback((value) => {
    $localeSettings.set(value);
  });

  $localeSettings.subscribe((val => {
    const value = val || defaultLang;
    const dropdown = document.getElementById('language-selector-dropdown') as HTMLUListElement;

    const languageOptions = dropdown.querySelectorAll('li');
    languageOptions.forEach((option) => {
      option.classList.remove('active-language-selector-option');
    });
    const activeOption = dropdown.querySelector(`[data-value="${value}"]`);
    if (activeOption) {
      activeOption.classList.add('active-language-selector-option');
    }
  }));
</script>

<style is:global>
  .active-language-selector-option {
      background-color: var(--primary-base);
      color: var(--text-inverted);

      &:hover {
        background-color: var(--primary-hover);
      }
  }
</style>
